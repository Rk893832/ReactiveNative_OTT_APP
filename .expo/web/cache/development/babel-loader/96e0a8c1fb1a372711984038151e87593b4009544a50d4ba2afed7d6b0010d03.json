{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SignupScreen() {\n  var navigation = useNavigation();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState({\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirm_password: \"\"\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userData = _useState4[0],\n    setUserData = _useState4[1];\n  var handleOnChange = function handleOnChange(name, value) {\n    setUserData(function (prevValues) {\n      return _objectSpread(_objectSpread({}, prevValues), {}, _defineProperty({}, name, value));\n    });\n  };\n  var handleSubmit = function handleSubmit() {\n    setIsLoading(true);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.containerheading,\n      children: \"Signup Form !!\"\n    }), _jsx(StatusBar, {\n      style: \"dark-content\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Name\",\n      value: userData.name,\n      onChangeText: function onChangeText(text) {\n        return handleOnChange('name', text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      value: userData.email,\n      onChangeText: function onChangeText(text) {\n        return handleOnChange('email', text);\n      },\n      keyboardType: \"email-address\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      value: userData.password,\n      onChangeText: function onChangeText(text) {\n        return handleOnChange('password', text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Confirm Password\",\n      value: userData.confirm_password,\n      onChangeText: function onChangeText(text) {\n        return handleOnChange('confirm_password', text);\n      }\n    }), isLoading && _jsxs(_Fragment, {\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"green\"\n      }), _jsx(Text, {\n        style: styles.loader,\n        children: \"Loading...\"\n      })]\n    }), !isLoading && _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleSubmit,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Signup\"\n      })\n    }), _jsx(TouchableOpacity, {\n      style: styles.linkContainer,\n      onPress: function onPress() {\n        return navigation.navigate('Login');\n      },\n      underlayColor: \"#EFEFEF\",\n      children: _jsxs(Text, {\n        style: styles.title,\n        children: [\"Already have an account?\", _jsx(Text, {\n          style: styles.linkText,\n          children: \"Log in\"\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  containerheading: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  input: {\n    fontSize: 18,\n    width: '80%',\n    marginBottom: 20,\n    padding: 10,\n    borderWidth: 2,\n    borderColor: '#ccc',\n    borderRadius: 5\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 18,\n    padding: 10\n  },\n  button: {\n    backgroundColor: '#009933',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 10\n  },\n  loader: {\n    fontSize: 25\n  },\n  title: {\n    fontSize: 18,\n    marginBottom: 20\n  },\n  linkContainer: {\n    flexDirection: 'row',\n    padding: 10,\n    backgroundColor: 'white',\n    borderRadius: 5,\n    borderWidth: 0,\n    borderColor: 'blue'\n  },\n  linkText: {\n    color: 'blue',\n    fontSize: 18\n  }\n});","map":{"version":3,"names":["useState","StatusBar","StyleSheet","Text","View","TextInput","TouchableOpacity","ActivityIndicator","useNavigation","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","SignupScreen","navigation","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","name","email","password","confirm_password","_useState4","userData","setUserData","handleOnChange","value","prevValues","_objectSpread","_defineProperty","handleSubmit","style","styles","container","children","containerheading","input","placeholder","onChangeText","text","keyboardType","size","color","loader","button","onPress","buttonText","linkContainer","navigate","underlayColor","title","linkText","create","flex","backgroundColor","alignItems","justifyContent","fontSize","fontWeight","marginBottom","width","padding","borderWidth","borderColor","borderRadius","paddingVertical","paddingHorizontal","flexDirection"],"sources":["D:/Project/ReactNative Project/ReactiveNative_OTT_APP/src/screens/Auth/SignupScreen.js"],"sourcesContent":["import { useState } from 'react'\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport {\r\n  StyleSheet, Text, View, TextInput,\r\n  TouchableOpacity, ActivityIndicator\r\n} from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nexport default function SignupScreen() {\r\n\r\n  const navigation = useNavigation();\r\n  const [isLoading, setIsLoading] = useState(false); // State for loader\r\n  let [userData, setUserData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\"\r\n  })\r\n\r\n  const handleOnChange = (name, value) => {\r\n\r\n    setUserData(prevValues => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setIsLoading(true)\r\n  }\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.containerheading}>Signup Form !!</Text>\r\n      <StatusBar style=\"dark-content\" />\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Name\"\r\n        value={userData.name}\r\n        onChangeText={(text) => handleOnChange('name', text)}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Email\"\r\n        value={userData.email}\r\n        onChangeText={(text) => handleOnChange('email', text)}\r\n        keyboardType=\"email-address\"\r\n      />\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Password\"\r\n        value={userData.password}\r\n        onChangeText={(text) => handleOnChange('password', text)}\r\n      />\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Confirm Password\"\r\n        value={userData.confirm_password}\r\n        onChangeText={(text) => handleOnChange('confirm_password', text)}\r\n      />\r\n\r\n      {isLoading && (\r\n        <>\r\n          <ActivityIndicator size=\"large\" color=\"green\" />\r\n          <Text style={styles.loader}>Loading...</Text>\r\n        </>\r\n      )}\r\n\r\n      {!isLoading && (\r\n        <TouchableOpacity style={styles.button} onPress={handleSubmit}>\r\n          <Text style={styles.buttonText}>Signup</Text>\r\n        </TouchableOpacity>\r\n      )}\r\n\r\n\r\n      <TouchableOpacity style={styles.linkContainer}\r\n        onPress={() => navigation.navigate('Login')}\r\n        underlayColor=\"#EFEFEF\">\r\n        <Text style={styles.title}>Already have an account? \r\n          <Text style={styles.linkText}>Log in</Text>\r\n        </Text>\r\n      </TouchableOpacity>\r\n\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  containerheading: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n  },\r\n\r\n  input: {\r\n    fontSize: 18,\r\n    width: '80%',\r\n    marginBottom: 20,\r\n    padding: 10,\r\n    borderWidth: 2,\r\n    borderColor: '#ccc',\r\n    borderRadius: 5,\r\n  },\r\n\r\n  buttonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    fontSize: 18,\r\n    padding: 10\r\n  },\r\n  button: {\r\n    backgroundColor: '#009933',\r\n    paddingVertical: 12,     // Increase vertical padding to make the button taller\r\n    paddingHorizontal: 24,   // Increase horizontal padding to make the button wider\r\n    borderRadius: 10,        // Adjust the border radius for curved corners\r\n  },\r\n\r\n  loader: {\r\n    fontSize: 25,\r\n  },\r\n\r\n  title: {\r\n    fontSize: 18,\r\n    marginBottom: 20,\r\n  },\r\n  \r\n  linkContainer: {\r\n    flexDirection: 'row', // Align children horizontally\r\n    padding: 10,\r\n    backgroundColor: 'white',\r\n    borderRadius: 5,\r\n    borderWidth: 0,\r\n    borderColor: 'blue',\r\n  },\r\n  linkText: {\r\n    color: 'blue',\r\n    fontSize: 18,\r\n  },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}