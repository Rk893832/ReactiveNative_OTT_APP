{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport HomeScreen from \"../screens/Home/HomeScreen\";\nimport LoginScreen from \"../screens/Auth/LoginScreen\";\nimport SignupScreen from \"../screens/Auth/SignupScreen\";\nimport SidebarScreen from \"../components/commons/Sidebar/SidebarScreen\";\nimport HeaderScreen from \"../components/commons/Header/HeaderScreen\";\nimport FooterScreen from \"../components/commons/Footer/FooterScreen\";\nvar Stack = createNativeStackNavigator();\nvar Tab = createBottomTabNavigator();\nimport View from \"react-native-web/dist/exports/View\";\nimport CommonFooter from \"../components/commons/Footer/FooterScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EmptyScreen() {\n  return _jsx(View, {});\n}\nfunction Home() {\n  return _jsxs(Tab.Navigator, {\n    tabBar: function tabBar(props) {\n      return _jsx(CommonFooter, _objectSpread(_objectSpread({}, props), {}, {\n        options: {\n          headerShown: false\n        }\n      }));\n    },\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: Home\n    }), _jsx(Tab.Screen, {\n      name: \"Chat\",\n      component: EmptyScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: EmptyScreen\n    })]\n  });\n}\nvar AppNavigator = function AppNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen,\n      options: getStackScreenOptions()\n    }), _jsx(Stack.Screen, {\n      name: \"Signup\",\n      component: SignupScreen,\n      options: getStackScreenOptions()\n    }), _jsx(Stack.Screen, {\n      name: \"home\",\n      component: HomeScreen,\n      options: {\n        header: function header() {\n          return _jsx(HeaderScreen, {\n            title: \"Home\"\n          });\n        }\n      }\n    })]\n  });\n};\nvar getStackScreenOptions = function getStackScreenOptions(title) {\n  return {\n    title: title,\n    headerStyle: {\n      backgroundColor: '#0bbefe',\n      borderBottomLeftRadius: 10,\n      borderBottomRightRadius: 10\n    },\n    headerTitleStyle: {\n      fontSize: 20,\n      fontWeight: 'bold',\n      color: '#fff',\n      textTransform: 'uppercase'\n    }\n  };\n};\nvar App = function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsx(AppNavigator, {})\n  });\n};\nexport default App;","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","HomeScreen","LoginScreen","SignupScreen","SidebarScreen","HeaderScreen","FooterScreen","Stack","Tab","View","CommonFooter","jsx","_jsx","jsxs","_jsxs","EmptyScreen","Home","Navigator","tabBar","props","_objectSpread","options","headerShown","screenOptions","children","Screen","name","component","AppNavigator","getStackScreenOptions","header","title","headerStyle","backgroundColor","borderBottomLeftRadius","borderBottomRightRadius","headerTitleStyle","fontSize","fontWeight","color","textTransform","App"],"sources":["D:/Project/ReactNative Project/ReactiveNative_OTT_APP/src/navigation/AppNavigator.js"],"sourcesContent":["import * as React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n// import { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n\r\n\r\nimport HomeScreen from '../screens/Home/HomeScreen';\r\nimport LoginScreen from '../screens/Auth/LoginScreen';\r\nimport SignupScreen from '../screens/Auth/SignupScreen';\r\nimport SidebarScreen from '../components/commons/Sidebar/SidebarScreen';\r\nimport HeaderScreen from '../components/commons/Header/HeaderScreen';\r\nimport FooterScreen from '../components/commons/Footer/FooterScreen';\r\n\r\n\r\nconst Stack = createNativeStackNavigator();\r\n// const Drawer = createDrawerNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\n\r\n\r\nimport { View } from 'react-native';\r\nimport CommonFooter from '../components/commons/Footer/FooterScreen';\r\n\r\n\r\nfunction EmptyScreen() {\r\n  return (\r\n    <View>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction Home() {\r\n  return (\r\n    <Tab.Navigator tabBar={props => <CommonFooter {...props} options={{ headerShown: false }} />}\r\n      screenOptions={{ headerShown: false }} >\r\n      <Tab.Screen name=\"Home\" component={Home} />\r\n      <Tab.Screen name=\"Chat\" component={EmptyScreen} />\r\n      <Tab.Screen name=\"Profile\" component={EmptyScreen} />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\n// function Root() {\r\n//   return (\r\n//     <Drawer.Navigator >\r\n//       <Drawer.Screen name=\"home\" component={Home} />\r\n//       {/* <Drawer.Screen name=\"Profile\" component={EmptyScreen} /> */}\r\n//       {/* <Stack.Screen name=\"Settings\" component={EmptyScreen} /> */}\r\n//     </Drawer.Navigator>\r\n//   );\r\n// }\r\n\r\n\r\nconst AppNavigator = () => {\r\n  return (\r\n    // <NavigationContainer>\r\n    <Stack.Navigator>\r\n      \r\n      <Stack.Screen name=\"Login\" component={LoginScreen} options={getStackScreenOptions()} />\r\n      <Stack.Screen name=\"Signup\" component={SignupScreen} options={getStackScreenOptions()} />\r\n      <Stack.Screen name=\"home\" component={HomeScreen} options={{ header: () => <HeaderScreen title=\"Home\" /> }} />\r\n      {/* <Stack.Screen name=\"Header\" component={() => <HeaderScreen title='Header' />} options={{ headerShown: false }} />\r\n      <Stack.Screen name=\"Footer\" component={FooterScreen} />\r\n      <Stack.Screen name=\"Sidebar\" component={SidebarScreen} /> */}\r\n    </Stack.Navigator>\r\n    // </NavigationContainer>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst getStackScreenOptions = (title) => ({\r\n  title,\r\n  headerStyle: {\r\n    backgroundColor: '#0bbefe',\r\n    borderBottomLeftRadius: 10,\r\n    borderBottomRightRadius: 10,\r\n  },\r\n  headerTitleStyle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#fff', // Customize the color\r\n    textTransform: 'uppercase', // Convert text to uppercase\r\n  }\r\n});\r\n\r\n\r\n\r\nconst App = () => (\r\n  <NavigationContainer>\r\n    <AppNavigator />\r\n  </NavigationContainer>\r\n);\r\nexport default App;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}