{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { AntDesign, Feather, FontAwesome } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CommonFooter = function CommonFooter(_ref) {\n  var navigation = _ref.navigation,\n    state = _ref.state;\n  var tabIcons = {\n    Home: {\n      icon: 'home',\n      label: 'Home'\n    },\n    Chat: {\n      icon: 'message-square',\n      label: 'Chat'\n    },\n    Profile: {\n      icon: 'user-circle',\n      label: 'Profile'\n    }\n  };\n  _jsx(MaterialCommunityIcons, {\n    name: \"message-processing-outline\",\n    size: 24,\n    color: \"black\"\n  });\n  return _jsx(View, {\n    style: styles.footer,\n    children: state.routes.map(function (route, index) {\n      var tabInfo = tabIcons[route.name];\n      if (tabInfo) {\n        var isFocused = state.index === index;\n        var icon = tabInfo.icon,\n          label = tabInfo.label;\n        return _jsxs(TouchableOpacity, {\n          style: styles.tabButton,\n          onPress: function onPress() {\n            return navigation.navigate(route.name);\n          },\n          children: [_jsxs(View, {\n            style: styles.iconContainer,\n            children: [_jsx(Feather, {\n              name: \"message-square\",\n              size: 24,\n              color: \"black\"\n            }), _jsx(AntDesign, {\n              name: icon,\n              size: 24,\n              color: isFocused ? '#0b81fe' : 'gray'\n            })]\n          }), _jsx(Text, {\n            style: isFocused ? styles.labelFocused : styles.label,\n            children: label\n          })]\n        }, index);\n      }\n      return null;\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  footer: {\n    flexDirection: 'row',\n    backgroundColor: 'white',\n    borderTopWidth: 1,\n    borderTopColor: '#e0e0e0',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    paddingBottom: 8,\n    paddingHorizontal: 16\n  },\n  tabButton: {\n    alignItems: 'center'\n  },\n  iconContainer: {\n    backgroundColor: 'white',\n    padding: 10,\n    borderRadius: 20\n  },\n  label: {\n    fontSize: 12,\n    color: 'gray',\n    marginTop: 4\n  },\n  labelFocused: {\n    fontSize: 12,\n    color: '#0b81fe',\n    marginTop: 4\n  }\n});\nexport default CommonFooter;","map":{"version":3,"names":["React","View","TouchableOpacity","Text","StyleSheet","AntDesign","Feather","FontAwesome","jsx","_jsx","jsxs","_jsxs","CommonFooter","_ref","navigation","state","tabIcons","Home","icon","label","Chat","Profile","MaterialCommunityIcons","name","size","color","style","styles","footer","children","routes","map","route","index","tabInfo","isFocused","tabButton","onPress","navigate","iconContainer","labelFocused","create","flexDirection","backgroundColor","borderTopWidth","borderTopColor","justifyContent","alignItems","paddingBottom","paddingHorizontal","padding","borderRadius","fontSize","marginTop"],"sources":["D:/Project/ReactNative Project/ReactiveNative_OTT_APP/src/components/commons/Footer/FooterScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet } from 'react-native';\r\nimport { AntDesign, Feather, FontAwesome } from '@expo/vector-icons';\r\n\r\nconst CommonFooter = ({ navigation, state }) => {\r\n  // Define tab icons and labels\r\n  const tabIcons = {\r\n    Home: { icon: 'home', label: 'Home' },\r\n    Chat: { icon: 'message-square', label: 'Chat' },\r\n    Profile: { icon: 'user-circle', label: 'Profile' },\r\n  };\r\n\r\n  <MaterialCommunityIcons name=\"message-processing-outline\" size={24} color=\"black\" />\r\n  return (\r\n    <View style={styles.footer}>\r\n      {state.routes.map((route, index) => {\r\n        const tabInfo = tabIcons[route.name]; // Retrieve tab info using route name\r\n\r\n        if (tabInfo) {\r\n          const isFocused = state.index === index;\r\n          const { icon, label } = tabInfo;\r\n\r\n          return (\r\n            <TouchableOpacity\r\n              key={index}\r\n              style={styles.tabButton}\r\n              onPress={() => navigation.navigate(route.name)}\r\n            >\r\n              <View style={styles.iconContainer}>\r\n              <Feather name=\"message-square\" size={24} color=\"black\" />\r\n                <AntDesign\r\n                  name={icon}\r\n                  size={24}\r\n                  color={isFocused ? '#0b81fe' : 'gray'}\r\n                />\r\n              </View>\r\n              <Text style={isFocused ? styles.labelFocused : styles.label}>{label}</Text>\r\n            </TouchableOpacity>\r\n          );\r\n        }\r\n        return null; // Handle cases where route name is not in tabIcons\r\n      })}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  footer: {\r\n    flexDirection: 'row',\r\n    backgroundColor: 'white',\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#e0e0e0',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n    paddingBottom: 8,\r\n    paddingHorizontal: 16,\r\n  },\r\n  tabButton: {\r\n    alignItems: 'center',\r\n  },\r\n  iconContainer: {\r\n    backgroundColor: 'white',\r\n    padding: 10,\r\n    borderRadius: 20,\r\n  },\r\n  label: {\r\n    fontSize: 12,\r\n    color: 'gray',\r\n    marginTop: 4,\r\n  },\r\n  labelFocused: {\r\n    fontSize: 12,\r\n    color: '#0b81fe',\r\n    marginTop: 4,\r\n  },\r\n});\r\n\r\nexport default CommonFooter;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}