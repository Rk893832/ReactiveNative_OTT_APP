{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isPressed = _useState2[0],\n    setIsPressed = _useState2[1];\n  var handlePress = function handlePress() {\n    setIsPressed(!isPressed);\n  };\n  var subcontainerStyle = [styles.subcontainer, isPressed ? styles.pressed : null];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Open up App.js to start working on your app!\"\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(Button, {\n      title: \"Press Me\",\n      style: \"blue\"\n    }), _jsx(TouchableHighlight, {\n      onPress: handlepress,\n      style: styles.subcontainer,\n      children: _jsx(Text, {\n        style: styles.text,\n        children: \" show the user detail \"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  subcontainer: {\n    padding: '10px',\n    backgroundColor: 'red',\n    borderRadius: '10px'\n  },\n  text: {\n    color: 'white'\n  },\n  hovered: {\n    backgroundColor: 'blue'\n  }\n});","map":{"version":3,"names":["useState","StatusBar","Button","StyleSheet","Text","View","TouchableHighlight","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","isPressed","setIsPressed","handlePress","subcontainerStyle","styles","subcontainer","pressed","style","container","children","title","onPress","handlepress","text","create","flex","backgroundColor","alignItems","justifyContent","padding","borderRadius","color","hovered"],"sources":["D:/Project/ReactNative Project/ReactiveNative_OTT_APP/App.js"],"sourcesContent":["import {useState} from 'react'\nimport { StatusBar } from 'expo-status-bar';\nimport { Button, StyleSheet, Text, View,TouchableHighlight } from 'react-native';\n\n\nexport default function App() {\n\n  const [isPressed, setIsPressed] = useState(false);\n  const handlePress = () => {\n    setIsPressed(!isPressed);\n  };\n\n  const subcontainerStyle = [\n    styles.subcontainer,\n    isPressed ? styles.pressed : null,\n  ];\n\n\n  return (\n    <View style={styles.container}>\n      <Text>Open up App.js to start working on your app!</Text>\n      <StatusBar style=\"auto\" />\n      <Button  title=\"Press Me\" style=\"blue\"/>\n\n      <TouchableHighlight\n        \n        onPress={handlepress}\n        style={styles.subcontainer}\n      >\n      <Text style={styles.text}> show the user detail </Text>\n      </TouchableHighlight>\n\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  subcontainer:{\n    padding: '10px',\n    backgroundColor:'red',\n    borderRadius:'10px'\n  },\n  text: {\n    color: 'white',\n  },\n  hovered: {\n    backgroundColor: 'blue', // Change the background color when hovered\n  },\n\n\n});\n"],"mappings":";AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,SAASC,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,kBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAI5C,eAAe,SAASC,GAAGA,CAAA,EAAG;EAE5B,IAAAC,SAAA,GAAkCZ,QAAQ,CAAC,KAAK,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAMI,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBD,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,IAAMG,iBAAiB,GAAG,CACxBC,MAAM,CAACC,YAAY,EACnBL,SAAS,GAAGI,MAAM,CAACE,OAAO,GAAG,IAAI,CAClC;EAGD,OACEX,KAAA,CAACL,IAAI;IAACiB,KAAK,EAAEH,MAAM,CAACI,SAAU;IAAAC,QAAA,GAC5BhB,IAAA,CAACJ,IAAI;MAAAoB,QAAA,EAAC;IAA4C,CAAM,CAAC,EACzDhB,IAAA,CAACP,SAAS;MAACqB,KAAK,EAAC;IAAM,CAAE,CAAC,EAC1Bd,IAAA,CAACN,MAAM;MAAEuB,KAAK,EAAC,UAAU;MAACH,KAAK,EAAC;IAAM,CAAC,CAAC,EAExCd,IAAA,CAACF,kBAAkB;MAEjBoB,OAAO,EAAEC,WAAY;MACrBL,KAAK,EAAEH,MAAM,CAACC,YAAa;MAAAI,QAAA,EAE7BhB,IAAA,CAACJ,IAAI;QAACkB,KAAK,EAAEH,MAAM,CAACS,IAAK;QAAAJ,QAAA,EAAC;MAAsB,CAAM;IAAC,CACnC,CAAC;EAAA,CAEjB,CAAC;AAEX;AAEA,IAAML,MAAM,GAAGhB,UAAU,CAAC0B,MAAM,CAAC;EAC/BN,SAAS,EAAE;IACTO,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDb,YAAY,EAAC;IACXc,OAAO,EAAE,MAAM;IACfH,eAAe,EAAC,KAAK;IACrBI,YAAY,EAAC;EACf,CAAC;EACDP,IAAI,EAAE;IACJQ,KAAK,EAAE;EACT,CAAC;EACDC,OAAO,EAAE;IACPN,eAAe,EAAE;EACnB;AAGF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}