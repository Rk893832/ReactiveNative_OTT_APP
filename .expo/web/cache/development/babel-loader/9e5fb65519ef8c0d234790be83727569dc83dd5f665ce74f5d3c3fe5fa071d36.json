{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    userData = _useState2[0],\n    setUserData = _useState2[1];\n  var handlePress = function handlePress(e) {\n    var name,\n      value = e.target;\n    setUserData([].concat(_toConsumableArray(userData), [name, value]));\n  };\n  var handleSubmit = function handleSubmit() {};\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: si,\n      children: \"Signup Form !!\"\n    }), _jsx(StatusBar, {\n      style: \"dark-content\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Name\",\n      value: \"name\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      value: \"email\",\n      keyboardType: \"email-address\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      value: \"password\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Confirm Password\",\n      value: \"confirm_password\"\n    }), _jsx(Button, {\n      title: \"Submit\",\n      onPress: handleSubmit\n    }), _jsx(TouchableHighlight, {\n      underlayColor: \"blue\",\n      onPress: function onPress() {\n        handlePress;\n      },\n      style: styles.subcontainer,\n      children: _jsx(Text, {\n        style: styles.text,\n        children: \" show the user detail \"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  subcontainer: {\n    padding: '10px',\n    backgroundColor: 'red',\n    borderRadius: '10px'\n  },\n  text: {\n    color: 'white'\n  },\n  pressed: {\n    backgroundColor: 'blue'\n  },\n  input: {\n    marginBottom: 10,\n    padding: 10,\n    borderWidth: 2,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    width: 250\n  }\n});","map":{"version":3,"names":["useState","StatusBar","Button","StyleSheet","Text","View","TouchableHighlight","TextInput","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","userData","setUserData","handlePress","e","name","value","target","concat","_toConsumableArray","handleSubmit","style","styles","container","children","si","input","placeholder","keyboardType","title","onPress","underlayColor","subcontainer","text","create","flex","backgroundColor","alignItems","justifyContent","padding","borderRadius","color","pressed","marginBottom","borderWidth","borderColor","width"],"sources":["D:/Project/ReactNative Project/ReactiveNative_OTT_APP/App.js"],"sourcesContent":["import { useState } from 'react'\nimport { StatusBar } from 'expo-status-bar';\nimport { Button, StyleSheet, Text, View, TouchableHighlight } from 'react-native';\nimport { TextInput } from 'react-native-web';\n\n\nexport default function App() {\n\n  let [userData, setUserData] = useState('')\n\n  const handlePress = (e) => {\n    let name, value = e.target\n    setUserData([...userData, name, value])\n  };\n\n  const handleSubmit = () => {\n\n  }\n\n  return (\n    <View style={styles.container}>\n      <Text style={ si}>Signup Form !!</Text>\n      <StatusBar style=\"dark-content\" />\n\n      <TextInput\n        style={styles.input}\n        placeholder=\"Name\"\n        value={\"name\"}\n      // onChangeText={(text) => setName(text)}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Email\"\n        value={\"email\"}\n        // onChangeText={(text) => setEmail(text)}\n        keyboardType=\"email-address\"\n      />\n\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        value={\"password\"}\n        // onChangeText={(text) => setEmail(text)}\n      />\n\n      <TextInput\n        style={styles.input}\n        placeholder=\"Confirm Password\"\n        value={\"confirm_password\"}\n        // onChangeText={(text) => setEmail(text)}\n      />\n\n\n      <Button title=\"Submit\" onPress={handleSubmit} />\n\n\n\n\n      <TouchableHighlight underlayColor=\"blue\" onPress={() => { handlePress }} style={styles.subcontainer}>\n        <Text style={styles.text}> show the user detail </Text>\n      </TouchableHighlight>\n\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  subcontainer: {\n    padding: '10px',\n    backgroundColor: 'red',\n    borderRadius: '10px'\n  },\n  text: {\n    color: 'white',\n  },\n  pressed: {\n    backgroundColor: 'blue', // Change the background color when pressed\n  },\n\n  input: {\n    marginBottom: 10,\n    padding: 10,\n    borderWidth: 2,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    width: 250\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}