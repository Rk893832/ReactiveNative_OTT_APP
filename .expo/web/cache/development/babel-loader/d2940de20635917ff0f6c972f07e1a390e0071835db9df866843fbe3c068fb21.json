{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState({\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirm_password: \"\"\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userData = _useState4[0],\n    setUserData = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isFocused = _useState6[0],\n    setIsFocused = _useState6[1];\n  var handleFocus = function handleFocus() {\n    console.log(\"handleFocus\");\n    setIsFocused(true);\n  };\n  var handleBlur = function handleBlur() {\n    console.log(\"handleBlur\");\n    setIsFocused(false);\n  };\n  var handleOnChange = function handleOnChange(name, value) {\n    setUserData(function (prevValues) {\n      return _objectSpread(_objectSpread({}, prevValues), {}, _defineProperty({}, name, value));\n    });\n  };\n  var handleSubmit = function handleSubmit() {};\n  console.log(isFocused, \"nnnnnn\");\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Signup Form !!\"\n    }), _jsx(StatusBar, {\n      style: \"dark-content\"\n    }), _jsx(TextInput, {\n      style: [styles.input, {\n        borderColor: isFocused ? '#0b81fe' : '#ccc'\n      }],\n      placeholder: \"Name\",\n      value: userData.name,\n      onFocus: handleFocus,\n      onBlur: handleBlur,\n      onChangeText: function onChangeText(text) {\n        return handleOnChange('name', text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      value: userData.email,\n      onChangeText: function onChangeText(text) {\n        return handleOnChange('email', text);\n      },\n      keyboardType: \"email-address\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      value: userData.password,\n      onChangeText: function onChangeText(text) {\n        return handleOnChange('password', text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Confirm Password\",\n      value: userData.confirm_password,\n      onChangeText: function onChangeText(text) {\n        return handleOnChange('confirm_password', text);\n      }\n    }), isLoading && _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"skyblue\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Submit\"\n      })\n    }), _jsx(TouchableWithoutFeedback, {\n      children: _jsx(View, {\n        style: styles.container,\n        children: _jsx(TextInput, {\n          style: [styles.input, {\n            borderColor: isFocused ? styles.inputFocused : '#ccc'\n          }],\n          placeholder: \"Click to focus\",\n          onBlur: handleBlur\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    fontSize: 18,\n    width: '80%',\n    marginBottom: 10,\n    padding: 10,\n    borderWidth: 20,\n    borderColor: '#ccc',\n    borderRadius: 5\n  },\n  inputFocused: {\n    borderColor: '#ccc'\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 18,\n    padding: 10\n  },\n  button: {\n    backgroundColor: '#009933',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 10\n  }\n});","map":{"version":3,"names":["useState","StatusBar","Button","StyleSheet","Text","View","TextInput","TouchableOpacity","ActivityIndicator","TouchableWithoutFeedback","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","name","email","password","confirm_password","_useState4","userData","setUserData","_useState5","_useState6","isFocused","setIsFocused","handleFocus","console","log","handleBlur","handleOnChange","value","prevValues","_objectSpread","_defineProperty","handleSubmit","style","styles","container","children","input","borderColor","placeholder","onFocus","onBlur","onChangeText","text","keyboardType","size","color","button","buttonText","inputFocused","create","flex","alignItems","justifyContent","fontSize","width","marginBottom","padding","borderWidth","borderRadius","fontWeight","backgroundColor","paddingVertical","paddingHorizontal"],"sources":["D:/Project/ReactNative Project/ReactiveNative_OTT_APP/App.js"],"sourcesContent":["import { useState } from 'react'\nimport { StatusBar } from 'expo-status-bar';\nimport {\n  Button, StyleSheet, Text, View, TextInput,\n  TouchableOpacity, ActivityIndicator,TouchableWithoutFeedback\n} from 'react-native';\n// import { TextInput } from 'react-native-web';\n\n\nexport default function App() {\n\n  const [isLoading, setIsLoading] = useState(false); // State for loader\n  let [userData, setUserData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    confirm_password: \"\"\n  })\n\n  const [isFocused, setIsFocused] = useState(false);\n\n  const handleFocus = () => {\n    console.log(\"handleFocus\")\n    setIsFocused(true);\n  };\n\n  const handleBlur = () => {\n    console.log(\"handleBlur\")\n    setIsFocused(false);\n  };\n\n  const handleOnChange = (name, value) => {\n\n    setUserData(prevValues => ({\n      ...prevValues,\n      [name]: value,\n    }));\n  };\n\n\n\n  const handleSubmit = () => {\n\n\n  }\n\n  console.log(isFocused, \"nnnnnn\")\n\n  return (\n    <View style={styles.container}>\n      <Text>Signup Form !!</Text>\n      <StatusBar style=\"dark-content\" />\n\n      <TextInput\n        // style={styles.input}\n\n\n\n        style={[\n          styles.input,\n          { borderColor: isFocused ? '#0b81fe' : '#ccc' },\n        ]}\n        placeholder=\"Name\"\n        value={userData.name}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onChangeText={(text) => handleOnChange('name', text)}\n      />\n      <TextInput\n        style={styles.input}\n        placeholder=\"Email\"\n        value={userData.email}\n        onChangeText={(text) => handleOnChange('email', text)}\n        keyboardType=\"email-address\"\n      />\n\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        value={userData.password}\n        onChangeText={(text) => handleOnChange('password', text)}\n      />\n\n      <TextInput\n        style={styles.input}\n        placeholder=\"Confirm Password\"\n        value={userData.confirm_password}\n        onChangeText={(text) => handleOnChange('confirm_password', text)}\n      />\n\n      {isLoading && <ActivityIndicator size=\"large\" color=\"skyblue\" />}\n\n      <TouchableOpacity style={styles.button} >\n        <Text style={styles.buttonText}>Submit</Text>\n      </TouchableOpacity>\n\n\n      <TouchableWithoutFeedback >\n      <View style={styles.container}>\n        <TextInput\n          style={[\n            styles.input,\n            { borderColor: isFocused ? styles.inputFocused : '#ccc' },\n          ]}\n          placeholder=\"Click to focus\"\n          onBlur={handleBlur}\n        />\n      </View>\n    </TouchableWithoutFeedback>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    // backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  input: {\n    fontSize: 18,\n    width: '80%',\n    marginBottom: 10,\n    padding: 10,\n    borderWidth: 20,\n    borderColor: '#ccc',\n    borderRadius: 5,\n  },\n\n  inputFocused: {\n    // borderColor: '#0b81fe', // Change to desired active color\n    // borderBlockColor:'red'\n    borderColor: '#ccc',\n\n  },\n\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 18,\n    padding: 10\n  },\n  button: {\n    backgroundColor: '#009933',\n    paddingVertical: 12,     // Increase vertical padding to make the button taller\n    paddingHorizontal: 24,   // Increase horizontal padding to make the button wider\n    borderRadius: 10,        // Adjust the border radius for curved corners\n  },\n\n  \n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}