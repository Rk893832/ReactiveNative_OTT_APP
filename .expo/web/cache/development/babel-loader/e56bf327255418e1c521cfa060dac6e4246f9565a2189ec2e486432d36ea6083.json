{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SettingsScreen = function SettingsScreen() {\n  var navigation = useNavigation();\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    notificationsEnabled = _useState2[0],\n    setNotificationsEnabled = _useState2[1];\n  var toggleNotifications = function toggleNotifications() {\n    setNotificationsEnabled(!notificationsEnabled);\n  };\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.headerText,\n        children: \"Settings\"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return console.log('Back button pressed');\n        },\n        children: _jsx(Text, {\n          style: styles.backText,\n          children: \"Back\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.section,\n      children: [_jsx(Text, {\n        style: styles.sectionHeader,\n        children: \"Account Settings\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.settingItem,\n        children: _jsx(Text, {\n          style: styles.settingText,\n          children: \"Profile Picture\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.settingItem,\n        children: _jsx(Text, {\n          style: styles.settingText,\n          children: \"Name and Email\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.settingItem,\n        onPress: function onPress() {\n          return navigation.navigate('ChangePassword');\n        },\n        children: _jsx(Text, {\n          style: styles.settingText,\n          children: \"Change Password\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.logoutButton,\n        onPress: function onPress() {\n          return console.log('Log out pressed');\n        },\n        children: _jsx(Text, {\n          style: styles.logoutText,\n          children: \"Log Out\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.section,\n      children: [_jsx(Text, {\n        style: styles.sectionHeader,\n        children: \"App Settings\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.settingItem,\n        children: _jsx(Text, {\n          style: styles.settingText,\n          children: \"Language\"\n        })\n      }), _jsxs(View, {\n        style: styles.settingItem,\n        children: [_jsx(Text, {\n          style: styles.settingText,\n          children: \"Notifications\"\n        }), _jsx(Switch, {\n          value: notificationsEnabled,\n          onValueChange: toggleNotifications\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: styles.settingItem,\n        children: _jsx(Text, {\n          style: styles.settingText,\n          children: \"Subtitle Language\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.settingItem,\n        children: _jsx(Text, {\n          style: styles.settingText,\n          children: \"Streaming Quality\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: 20\n  },\n  headerText: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#333'\n  },\n  backText: {\n    fontSize: 16,\n    color: '#666'\n  },\n  section: {\n    marginHorizontal: 20,\n    marginBottom: 20\n  },\n  sectionHeader: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: '#444'\n  },\n  settingItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 15,\n    paddingHorizontal: 20,\n    backgroundColor: 'white',\n    borderRadius: 10,\n    marginBottom: 10,\n    elevation: 2\n  },\n  settingText: {\n    fontSize: 16,\n    color: '#333'\n  },\n  logoutButton: {\n    backgroundColor: '#ff5454',\n    paddingVertical: 15,\n    paddingHorizontal: 20,\n    borderRadius: 10\n  },\n  logoutText: {\n    fontSize: 16,\n    color: 'white',\n    fontWeight: 'bold',\n    textAlign: 'center'\n  }\n});\nexport default SettingsScreen;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","Switch","StyleSheet","ScrollView","useNavigation","jsx","_jsx","jsxs","_jsxs","SettingsScreen","navigation","_useState","_useState2","_slicedToArray","notificationsEnabled","setNotificationsEnabled","toggleNotifications","style","styles","container","children","header","headerText","onPress","console","log","backText","section","sectionHeader","settingItem","settingText","navigate","logoutButton","logoutText","value","onValueChange","create","flex","backgroundColor","flexDirection","justifyContent","alignItems","margin","fontSize","fontWeight","color","marginHorizontal","marginBottom","paddingVertical","paddingHorizontal","borderRadius","elevation","textAlign"],"sources":["D:/Project/ReactNative Project/ReactiveNative_OTT_APP/src/screens/Setting/SettingScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Switch, StyleSheet, ScrollView } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst SettingsScreen = () => {\r\n    \r\n    const navigation = useNavigation();\r\n    const [notificationsEnabled, setNotificationsEnabled] = useState(true);\r\n    const toggleNotifications = () => {\r\n        setNotificationsEnabled(!notificationsEnabled);\r\n    };\r\n\r\n    return (\r\n        <ScrollView style={styles.container}>\r\n            <View style={styles.header}>\r\n                <Text style={styles.headerText}>Settings</Text>\r\n                <TouchableOpacity onPress={() => console.log('Back button pressed')}>\r\n                    <Text style={styles.backText}>Back</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n            <View style={styles.section}>\r\n                <Text style={styles.sectionHeader}>Account Settings</Text>\r\n                <TouchableOpacity style={styles.settingItem}>\r\n                    <Text style={styles.settingText}>Profile Picture</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.settingItem}>\r\n                    <Text style={styles.settingText}>Name and Email</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.settingItem} onPress={() => navigation.navigate('ChangePassword')}>\r\n                    <Text style={styles.settingText}>Change Password</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.logoutButton} onPress={() => console.log('Log out pressed')}>\r\n                    <Text style={styles.logoutText}>Log Out</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n            <View style={styles.section}>\r\n                <Text style={styles.sectionHeader}>App Settings</Text>\r\n                <TouchableOpacity style={styles.settingItem}>\r\n                    <Text style={styles.settingText}>Language</Text>\r\n                </TouchableOpacity>\r\n                <View style={styles.settingItem}>\r\n                    <Text style={styles.settingText}>Notifications</Text>\r\n                    <Switch value={notificationsEnabled} onValueChange={toggleNotifications} />\r\n                </View>\r\n                <TouchableOpacity style={styles.settingItem}>\r\n                    <Text style={styles.settingText}>Subtitle Language</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.settingItem}>\r\n                    <Text style={styles.settingText}>Streaming Quality</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n    },\r\n    header: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        margin: 20,\r\n    },\r\n    headerText: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        color: '#333',\r\n    },\r\n    backText: {\r\n        fontSize: 16,\r\n        color: '#666',\r\n    },\r\n    section: {\r\n        marginHorizontal: 20,\r\n\r\n        marginBottom: 20,\r\n    },\r\n    sectionHeader: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        marginBottom: 10,\r\n        color: '#444',\r\n    },\r\n    settingItem: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        paddingVertical: 15,\r\n        paddingHorizontal: 20,\r\n        backgroundColor: 'white',\r\n        borderRadius: 10,\r\n        marginBottom: 10,\r\n        elevation: 2,\r\n    },\r\n    settingText: {\r\n        fontSize: 16,\r\n        color: '#333',\r\n    },\r\n    logoutButton: {\r\n        backgroundColor: '#ff5454',\r\n        paddingVertical: 15,\r\n        paddingHorizontal: 20,\r\n        borderRadius: 10,\r\n    },\r\n    logoutText: {\r\n        fontSize: 16,\r\n        color: 'white',\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n    },\r\n});\r\n\r\nexport default SettingsScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAExC,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEzD,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EAEzB,IAAMC,UAAU,GAAGN,aAAa,CAAC,CAAC;EAClC,IAAAO,SAAA,GAAwDd,QAAQ,CAAC,IAAI,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/DG,oBAAoB,GAAAF,UAAA;IAAEG,uBAAuB,GAAAH,UAAA;EACpD,IAAMI,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;IAC9BD,uBAAuB,CAAC,CAACD,oBAAoB,CAAC;EAClD,CAAC;EAED,OACIN,KAAA,CAACL,UAAU;IAACc,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAChCZ,KAAA,CAACV,IAAI;MAACmB,KAAK,EAAEC,MAAM,CAACG,MAAO;MAAAD,QAAA,GACvBd,IAAA,CAACP,IAAI;QAACkB,KAAK,EAAEC,MAAM,CAACI,UAAW;QAAAF,QAAA,EAAC;MAAQ,CAAM,CAAC,EAC/Cd,IAAA,CAACN,gBAAgB;QAACuB,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;QAAA,CAAC;QAAAL,QAAA,EAChEd,IAAA,CAACP,IAAI;UAACkB,KAAK,EAAEC,MAAM,CAACQ,QAAS;UAAAN,QAAA,EAAC;QAAI,CAAM;MAAC,CAC3B,CAAC;IAAA,CACjB,CAAC,EAEPZ,KAAA,CAACV,IAAI;MAACmB,KAAK,EAAEC,MAAM,CAACS,OAAQ;MAAAP,QAAA,GACxBd,IAAA,CAACP,IAAI;QAACkB,KAAK,EAAEC,MAAM,CAACU,aAAc;QAAAR,QAAA,EAAC;MAAgB,CAAM,CAAC,EAC1Dd,IAAA,CAACN,gBAAgB;QAACiB,KAAK,EAAEC,MAAM,CAACW,WAAY;QAAAT,QAAA,EACxCd,IAAA,CAACP,IAAI;UAACkB,KAAK,EAAEC,MAAM,CAACY,WAAY;UAAAV,QAAA,EAAC;QAAe,CAAM;MAAC,CACzC,CAAC,EACnBd,IAAA,CAACN,gBAAgB;QAACiB,KAAK,EAAEC,MAAM,CAACW,WAAY;QAAAT,QAAA,EACxCd,IAAA,CAACP,IAAI;UAACkB,KAAK,EAAEC,MAAM,CAACY,WAAY;UAAAV,QAAA,EAAC;QAAc,CAAM;MAAC,CACxC,CAAC,EACnBd,IAAA,CAACN,gBAAgB;QAACiB,KAAK,EAAEC,MAAM,CAACW,WAAY;QAACN,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMb,UAAU,CAACqB,QAAQ,CAAC,gBAAgB,CAAC;QAAA,CAAC;QAAAX,QAAA,EAC9Fd,IAAA,CAACP,IAAI;UAACkB,KAAK,EAAEC,MAAM,CAACY,WAAY;UAAAV,QAAA,EAAC;QAAe,CAAM;MAAC,CACzC,CAAC,EACnBd,IAAA,CAACN,gBAAgB;QAACiB,KAAK,EAAEC,MAAM,CAACc,YAAa;QAACT,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;QAAA,CAAC;QAAAL,QAAA,EACxFd,IAAA,CAACP,IAAI;UAACkB,KAAK,EAAEC,MAAM,CAACe,UAAW;UAAAb,QAAA,EAAC;QAAO,CAAM;MAAC,CAChC,CAAC;IAAA,CACjB,CAAC,EAEPZ,KAAA,CAACV,IAAI;MAACmB,KAAK,EAAEC,MAAM,CAACS,OAAQ;MAAAP,QAAA,GACxBd,IAAA,CAACP,IAAI;QAACkB,KAAK,EAAEC,MAAM,CAACU,aAAc;QAAAR,QAAA,EAAC;MAAY,CAAM,CAAC,EACtDd,IAAA,CAACN,gBAAgB;QAACiB,KAAK,EAAEC,MAAM,CAACW,WAAY;QAAAT,QAAA,EACxCd,IAAA,CAACP,IAAI;UAACkB,KAAK,EAAEC,MAAM,CAACY,WAAY;UAAAV,QAAA,EAAC;QAAQ,CAAM;MAAC,CAClC,CAAC,EACnBZ,KAAA,CAACV,IAAI;QAACmB,KAAK,EAAEC,MAAM,CAACW,WAAY;QAAAT,QAAA,GAC5Bd,IAAA,CAACP,IAAI;UAACkB,KAAK,EAAEC,MAAM,CAACY,WAAY;UAAAV,QAAA,EAAC;QAAa,CAAM,CAAC,EACrDd,IAAA,CAACL,MAAM;UAACiC,KAAK,EAAEpB,oBAAqB;UAACqB,aAAa,EAAEnB;QAAoB,CAAE,CAAC;MAAA,CACzE,CAAC,EACPV,IAAA,CAACN,gBAAgB;QAACiB,KAAK,EAAEC,MAAM,CAACW,WAAY;QAAAT,QAAA,EACxCd,IAAA,CAACP,IAAI;UAACkB,KAAK,EAAEC,MAAM,CAACY,WAAY;UAAAV,QAAA,EAAC;QAAiB,CAAM;MAAC,CAC3C,CAAC,EACnBd,IAAA,CAACN,gBAAgB;QAACiB,KAAK,EAAEC,MAAM,CAACW,WAAY;QAAAT,QAAA,EACxCd,IAAA,CAACP,IAAI;UAACkB,KAAK,EAAEC,MAAM,CAACY,WAAY;UAAAV,QAAA,EAAC;QAAiB,CAAM;MAAC,CAC3C,CAAC;IAAA,CACjB,CAAC;EAAA,CACC,CAAC;AAErB,CAAC;AAED,IAAMF,MAAM,GAAGhB,UAAU,CAACkC,MAAM,CAAC;EAC7BjB,SAAS,EAAE;IACPkB,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACrB,CAAC;EACDjB,MAAM,EAAE;IACJkB,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBC,MAAM,EAAE;EACZ,CAAC;EACDpB,UAAU,EAAE;IACRqB,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE;EACX,CAAC;EACDnB,QAAQ,EAAE;IACNiB,QAAQ,EAAE,EAAE;IACZE,KAAK,EAAE;EACX,CAAC;EACDlB,OAAO,EAAE;IACLmB,gBAAgB,EAAE,EAAE;IAEpBC,YAAY,EAAE;EAClB,CAAC;EACDnB,aAAa,EAAE;IACXe,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBG,YAAY,EAAE,EAAE;IAChBF,KAAK,EAAE;EACX,CAAC;EACDhB,WAAW,EAAE;IACTU,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,eAAe;IAC/BC,UAAU,EAAE,QAAQ;IACpBO,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,EAAE;IACrBX,eAAe,EAAE,OAAO;IACxBY,YAAY,EAAE,EAAE;IAChBH,YAAY,EAAE,EAAE;IAChBI,SAAS,EAAE;EACf,CAAC;EACDrB,WAAW,EAAE;IACTa,QAAQ,EAAE,EAAE;IACZE,KAAK,EAAE;EACX,CAAC;EACDb,YAAY,EAAE;IACVM,eAAe,EAAE,SAAS;IAC1BU,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,EAAE;IACrBC,YAAY,EAAE;EAClB,CAAC;EACDjB,UAAU,EAAE;IACRU,QAAQ,EAAE,EAAE;IACZE,KAAK,EAAE,OAAO;IACdD,UAAU,EAAE,MAAM;IAClBQ,SAAS,EAAE;EACf;AACJ,CAAC,CAAC;AAEF,eAAe3C,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}