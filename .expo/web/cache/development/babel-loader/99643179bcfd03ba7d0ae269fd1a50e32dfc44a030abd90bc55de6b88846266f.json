{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatListScreen = function ChatListScreen(_ref) {\n  var navigation = _ref.navigation;\n  var chatData = [{\n    id: 1,\n    contact: 'John',\n    lastMessage: 'Hey, how are you?'\n  }, {\n    id: 2,\n    contact: 'Jane',\n    lastMessage: 'See you later!'\n  }];\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(TouchableOpacity, {\n      style: styles.chatItem,\n      onPress: function onPress() {\n        return navigation.navigate('ChatScreen', {\n          contact: item.contact\n        });\n      },\n      children: [_jsx(Text, {\n        style: styles.contactName,\n        children: item.contact\n      }), _jsx(Text, {\n        style: styles.lastMessage,\n        children: item.lastMessage\n      })]\n    });\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(FlatList, {\n      data: chatData,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: renderItem\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16\n  },\n  chatItem: {\n    borderBottomWidth: 1,\n    borderColor: '#ccc',\n    paddingVertical: 16\n  },\n  contactName: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  lastMessage: {\n    marginTop: 4,\n    color: '#555'\n  }\n});\nexport default ChatListScreen;","map":{"version":3,"names":["React","View","Text","FlatList","TouchableOpacity","StyleSheet","jsx","_jsx","jsxs","_jsxs","ChatListScreen","_ref","navigation","chatData","id","contact","lastMessage","renderItem","_ref2","item","style","styles","chatItem","onPress","navigate","children","contactName","container","data","keyExtractor","toString","create","flex","padding","borderBottomWidth","borderColor","paddingVertical","fontSize","fontWeight","marginTop","color"],"sources":["D:/Project/ReactNative Project/ReactiveNative_OTT_APP/src/screens/Chat/ChatListScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, FlatList, TouchableOpacity, StyleSheet } from 'react-native';\r\n\r\nconst ChatListScreen = ({ navigation }) => {\r\n  const chatData = [\r\n    { id: 1, contact: 'John', lastMessage: 'Hey, how are you?' },\r\n    { id: 2, contact: 'Jane', lastMessage: 'See you later!' },\r\n    // Add more chat data here\r\n  ];\r\n\r\n  const renderItem = ({ item }) => (\r\n    <TouchableOpacity\r\n      style={styles.chatItem}\r\n      onPress={() => navigation.navigate('ChatScreen', { contact: item.contact })}\r\n    >\r\n      <Text style={styles.contactName}>{item.contact}</Text>\r\n      <Text style={styles.lastMessage}>{item.lastMessage}</Text>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <FlatList\r\n        data={chatData}\r\n        keyExtractor={(item) => item.id.toString()}\r\n        renderItem={renderItem}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 16,\r\n  },\r\n  chatItem: {\r\n    borderBottomWidth: 1,\r\n    borderColor: '#ccc',\r\n    paddingVertical: 16,\r\n  },\r\n  contactName: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n  lastMessage: {\r\n    marginTop: 4,\r\n    color: '#555',\r\n  },\r\n});\r\n\r\nexport default ChatListScreen;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG1B,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAClC,IAAMC,QAAQ,GAAG,CACf;IAAEC,EAAE,EAAE,CAAC;IAAEC,OAAO,EAAE,MAAM;IAAEC,WAAW,EAAE;EAAoB,CAAC,EAC5D;IAAEF,EAAE,EAAE,CAAC;IAAEC,OAAO,EAAE,MAAM;IAAEC,WAAW,EAAE;EAAiB,CAAC,CAE1D;EAED,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,KAAA;IAAA,IAAMC,IAAI,GAAAD,KAAA,CAAJC,IAAI;IAAA,OACxBV,KAAA,CAACL,gBAAgB;MACfgB,KAAK,EAAEC,MAAM,CAACC,QAAS;MACvBC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMX,UAAU,CAACY,QAAQ,CAAC,YAAY,EAAE;UAAET,OAAO,EAAEI,IAAI,CAACJ;QAAQ,CAAC,CAAC;MAAA,CAAC;MAAAU,QAAA,GAE5ElB,IAAA,CAACL,IAAI;QAACkB,KAAK,EAAEC,MAAM,CAACK,WAAY;QAAAD,QAAA,EAAEN,IAAI,CAACJ;MAAO,CAAO,CAAC,EACtDR,IAAA,CAACL,IAAI;QAACkB,KAAK,EAAEC,MAAM,CAACL,WAAY;QAAAS,QAAA,EAAEN,IAAI,CAACH;MAAW,CAAO,CAAC;IAAA,CAC1C,CAAC;EAAA,CACpB;EAED,OACET,IAAA,CAACN,IAAI;IAACmB,KAAK,EAAEC,MAAM,CAACM,SAAU;IAAAF,QAAA,EAC5BlB,IAAA,CAACJ,QAAQ;MACPyB,IAAI,EAAEf,QAAS;MACfgB,YAAY,EAAE,SAAAA,aAACV,IAAI;QAAA,OAAKA,IAAI,CAACL,EAAE,CAACgB,QAAQ,CAAC,CAAC;MAAA,CAAC;MAC3Cb,UAAU,EAAEA;IAAW,CACxB;EAAC,CACE,CAAC;AAEX,CAAC;AAED,IAAMI,MAAM,GAAGhB,UAAU,CAAC0B,MAAM,CAAC;EAC/BJ,SAAS,EAAE;IACTK,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE;EACX,CAAC;EACDX,QAAQ,EAAE;IACRY,iBAAiB,EAAE,CAAC;IACpBC,WAAW,EAAE,MAAM;IACnBC,eAAe,EAAE;EACnB,CAAC;EACDV,WAAW,EAAE;IACXW,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDtB,WAAW,EAAE;IACXuB,SAAS,EAAE,CAAC;IACZC,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAe9B,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}