{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SwitchToggle from 'react-native-switch-toggle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SettingsScreen = function SettingsScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    toggle1 = _useState2[0],\n    setToggle1 = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    toggle2 = _useState4[0],\n    setToggle2 = _useState4[1];\n  var handleToggle1 = function handleToggle1() {\n    return setToggle1(!toggle1);\n  };\n  var handleToggle2 = function handleToggle2() {\n    return setToggle2(!toggle2);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.settingItem,\n      children: [_jsx(Text, {\n        style: styles.settingText,\n        children: \"Toggle 1\"\n      }), _jsx(SwitchToggle, {\n        containerStyle: styles.toggleContainer,\n        circleStyle: styles.toggleCircle,\n        switchOn: toggle1,\n        onPress: handleToggle1,\n        circleColorOff: \"white\",\n        circleColorOn: \"green\",\n        backgroundColorOn: \"gray\",\n        backgroundColorOff: \"gray\"\n      })]\n    }), _jsxs(View, {\n      style: styles.settingItem,\n      children: [_jsx(Text, {\n        style: styles.settingText,\n        children: \"Toggle 2\"\n      }), _jsx(Switch, {\n        value: toggle2,\n        onValueChange: handleToggle2\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    justifyContent: 'center'\n  },\n  settingItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  settingText: {\n    fontSize: 18\n  },\n  toggleContainer: {\n    width: 50,\n    height: 30,\n    borderRadius: 15,\n    padding: 5\n  },\n  toggleCircle: {\n    width: 20,\n    height: 20,\n    borderRadius: 10,\n    backgroundColor: 'white'\n  }\n});\nexport default SettingsScreen;","map":{"version":3,"names":["React","useState","View","Text","Switch","StyleSheet","SwitchToggle","jsx","_jsx","jsxs","_jsxs","SettingsScreen","_useState","_useState2","_slicedToArray","toggle1","setToggle1","_useState3","_useState4","toggle2","setToggle2","handleToggle1","handleToggle2","style","styles","container","children","settingItem","settingText","containerStyle","toggleContainer","circleStyle","toggleCircle","switchOn","onPress","circleColorOff","circleColorOn","backgroundColorOn","backgroundColorOff","value","onValueChange","create","flex","padding","justifyContent","flexDirection","alignItems","marginBottom","fontSize","width","height","borderRadius","backgroundColor"],"sources":["D:/Project/ReactNative Project/ReactiveNative_OTT_APP/src/screens/Setting/SettingScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, Switch, StyleSheet } from 'react-native';\r\nimport SwitchToggle from 'react-native-switch-toggle';\r\n\r\nconst SettingsScreen = () => {\r\n  const [toggle1, setToggle1] = useState(false);\r\n  const [toggle2, setToggle2] = useState(false);\r\n\r\n  const handleToggle1 = () => setToggle1(!toggle1);\r\n  const handleToggle2 = () => setToggle2(!toggle2);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.settingItem}>\r\n        <Text style={styles.settingText}>Toggle 1</Text>\r\n        <SwitchToggle\r\n          containerStyle={styles.toggleContainer}\r\n          circleStyle={styles.toggleCircle}\r\n          switchOn={toggle1}\r\n          onPress={handleToggle1}\r\n          circleColorOff=\"white\"\r\n          circleColorOn=\"green\"\r\n          backgroundColorOn=\"gray\"\r\n          backgroundColorOff=\"gray\"\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.settingItem}>\r\n        <Text style={styles.settingText}>Toggle 2</Text>\r\n        <Switch\r\n          value={toggle2}\r\n          onValueChange={handleToggle2}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    justifyContent: 'center',\r\n  },\r\n  settingItem: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  settingText: {\r\n    fontSize: 18,\r\n  },\r\n  toggleContainer: {\r\n    width: 50,\r\n    height: 30,\r\n    borderRadius: 15,\r\n    padding: 5,\r\n  },\r\n  toggleCircle: {\r\n    width: 20,\r\n    height: 20,\r\n    borderRadius: 10,\r\n    backgroundColor: 'white',\r\n  },\r\n});\r\n\r\nexport default SettingsScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAExC,OAAOC,YAAY,MAAM,4BAA4B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEtD,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EAC3B,IAAAC,SAAA,GAA8BX,QAAQ,CAAC,KAAK,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAA8BhB,QAAQ,CAAC,KAAK,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAtCE,OAAO,GAAAD,UAAA;IAAEE,UAAU,GAAAF,UAAA;EAE1B,IAAMG,aAAa,GAAG,SAAhBA,aAAaA,CAAA;IAAA,OAASL,UAAU,CAAC,CAACD,OAAO,CAAC;EAAA;EAChD,IAAMO,aAAa,GAAG,SAAhBA,aAAaA,CAAA;IAAA,OAASF,UAAU,CAAC,CAACD,OAAO,CAAC;EAAA;EAEhD,OACET,KAAA,CAACR,IAAI;IAACqB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BhB,KAAA,CAACR,IAAI;MAACqB,KAAK,EAAEC,MAAM,CAACG,WAAY;MAAAD,QAAA,GAC9BlB,IAAA,CAACL,IAAI;QAACoB,KAAK,EAAEC,MAAM,CAACI,WAAY;QAAAF,QAAA,EAAC;MAAQ,CAAM,CAAC,EAChDlB,IAAA,CAACF,YAAY;QACXuB,cAAc,EAAEL,MAAM,CAACM,eAAgB;QACvCC,WAAW,EAAEP,MAAM,CAACQ,YAAa;QACjCC,QAAQ,EAAElB,OAAQ;QAClBmB,OAAO,EAAEb,aAAc;QACvBc,cAAc,EAAC,OAAO;QACtBC,aAAa,EAAC,OAAO;QACrBC,iBAAiB,EAAC,MAAM;QACxBC,kBAAkB,EAAC;MAAM,CAC1B,CAAC;IAAA,CACE,CAAC,EAEP5B,KAAA,CAACR,IAAI;MAACqB,KAAK,EAAEC,MAAM,CAACG,WAAY;MAAAD,QAAA,GAC9BlB,IAAA,CAACL,IAAI;QAACoB,KAAK,EAAEC,MAAM,CAACI,WAAY;QAAAF,QAAA,EAAC;MAAQ,CAAM,CAAC,EAChDlB,IAAA,CAACJ,MAAM;QACLmC,KAAK,EAAEpB,OAAQ;QACfqB,aAAa,EAAElB;MAAc,CAC9B,CAAC;IAAA,CACE,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,IAAME,MAAM,GAAGnB,UAAU,CAACoC,MAAM,CAAC;EAC/BhB,SAAS,EAAE;IACTiB,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXC,cAAc,EAAE;EAClB,CAAC;EACDjB,WAAW,EAAE;IACXkB,aAAa,EAAE,KAAK;IACpBD,cAAc,EAAE,eAAe;IAC/BE,UAAU,EAAE,QAAQ;IACpBC,YAAY,EAAE;EAChB,CAAC;EACDnB,WAAW,EAAE;IACXoB,QAAQ,EAAE;EACZ,CAAC;EACDlB,eAAe,EAAE;IACfmB,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBR,OAAO,EAAE;EACX,CAAC;EACDX,YAAY,EAAE;IACZiB,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,EAAE;IAChBC,eAAe,EAAE;EACnB;AACF,CAAC,CAAC;AAEF,eAAezC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}