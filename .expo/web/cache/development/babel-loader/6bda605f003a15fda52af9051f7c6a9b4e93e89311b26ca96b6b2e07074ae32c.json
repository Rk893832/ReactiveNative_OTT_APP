{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { List, Avatar } from 'react-native-paper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar ChatListScreen = function ChatListScreen(_ref) {\n  var navigation = _ref.navigation;\n  var chatData = [{\n    id: 1,\n    contact: 'John',\n    lastMessage: 'Hey, how are you?'\n  }, {\n    id: 2,\n    contact: 'Rohit',\n    lastMessage: 'See you later!'\n  }];\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(List.Item, {\n      title: item.contact,\n      description: item.lastMessage,\n      titleStyle: styles.contactTitle,\n      descriptionStyle: styles.lastMessage,\n      left: function left() {\n        return _jsx(Avatar.Text, {\n          label: item.contact[0],\n          size: 40,\n          style: styles.avatar\n        });\n      },\n      onPress: function onPress() {\n        return navigation.navigate('Profile', {\n          contact: item.contact\n        });\n      }\n    });\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(FlatList, {\n      data: chatData,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      renderItem: renderItem,\n      contentContainerStyle: styles.listContainer\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F6F6F6'\n  },\n  listContainer: {\n    padding: 16\n  },\n  contactTitle: {\n    fontWeight: 'bold',\n    fontSize: 18,\n    color: '#333'\n  },\n  lastMessage: {\n    color: '#777'\n  },\n  avatar: {\n    backgroundColor: '#007BFF'\n  }\n});\nexport default ChatListScreen;","map":{"version":3,"names":["React","View","FlatList","StyleSheet","List","Avatar","jsx","_jsx","ChatListScreen","_ref","navigation","chatData","id","contact","lastMessage","renderItem","_ref2","item","Item","title","description","titleStyle","styles","contactTitle","descriptionStyle","left","Text","label","size","style","avatar","onPress","navigate","container","children","data","keyExtractor","toString","contentContainerStyle","listContainer","create","flex","backgroundColor","padding","fontWeight","fontSize","color"],"sources":["D:/Project/ReactNative Project/ReactiveNative_OTT_APP/src/screens/Chat/ChatListScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { View, FlatList, StyleSheet } from 'react-native';\r\nimport { List, Avatar } from 'react-native-paper';\r\n\r\nconst ChatListScreen = ({ navigation }) => {\r\n  const chatData = [\r\n    { id: 1, contact: 'John', lastMessage: 'Hey, how are you?' },\r\n    { id: 2, contact: 'Rohit', lastMessage: 'See you later!' },\r\n    // Add more chat data here\r\n  ];\r\n\r\n  const renderItem = ({ item }) => (\r\n    <List.Item\r\n      title={item.contact}\r\n      description={item.lastMessage}\r\n      titleStyle={styles.contactTitle}\r\n      descriptionStyle={styles.lastMessage}\r\n      left={() => <Avatar.Text label={item.contact[0]} size={40} style={styles.avatar} />}\r\n      onPress={() => navigation.navigate('Profile', { contact: item.contact })}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <FlatList\r\n        data={chatData}\r\n        keyExtractor={(item) => item.id.toString()}\r\n        renderItem={renderItem}\r\n        contentContainerStyle={styles.listContainer}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#F6F6F6',\r\n  },\r\n  listContainer: {\r\n    padding: 16,\r\n  },\r\n  contactTitle: {\r\n    fontWeight: 'bold',\r\n    fontSize: 18,\r\n    color: '#333',\r\n  },\r\n  lastMessage: {\r\n    color: '#777',\r\n  },\r\n  avatar: {\r\n    backgroundColor: '#007BFF',\r\n  },\r\n});\r\n\r\nexport default ChatListScreen;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAE1B,SAASC,IAAI,EAAEC,MAAM,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAElD,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAClC,IAAMC,QAAQ,GAAG,CACf;IAAEC,EAAE,EAAE,CAAC;IAAEC,OAAO,EAAE,MAAM;IAAEC,WAAW,EAAE;EAAoB,CAAC,EAC5D;IAAEF,EAAE,EAAE,CAAC;IAAEC,OAAO,EAAE,OAAO;IAAEC,WAAW,EAAE;EAAiB,CAAC,CAE3D;EAED,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,KAAA;IAAA,IAAMC,IAAI,GAAAD,KAAA,CAAJC,IAAI;IAAA,OACxBV,IAAA,CAACH,IAAI,CAACc,IAAI;MACRC,KAAK,EAAEF,IAAI,CAACJ,OAAQ;MACpBO,WAAW,EAAEH,IAAI,CAACH,WAAY;MAC9BO,UAAU,EAAEC,MAAM,CAACC,YAAa;MAChCC,gBAAgB,EAAEF,MAAM,CAACR,WAAY;MACrCW,IAAI,EAAE,SAAAA,KAAA;QAAA,OAAMlB,IAAA,CAACF,MAAM,CAACqB,IAAI;UAACC,KAAK,EAAEV,IAAI,CAACJ,OAAO,CAAC,CAAC,CAAE;UAACe,IAAI,EAAE,EAAG;UAACC,KAAK,EAAEP,MAAM,CAACQ;QAAO,CAAE,CAAC;MAAA,CAAC;MACpFC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMrB,UAAU,CAACsB,QAAQ,CAAC,SAAS,EAAE;UAAEnB,OAAO,EAAEI,IAAI,CAACJ;QAAQ,CAAC,CAAC;MAAA;IAAC,CAC1E,CAAC;EAAA,CACH;EAED,OACEN,IAAA,CAACN,IAAI;IAAC4B,KAAK,EAAEP,MAAM,CAACW,SAAU;IAAAC,QAAA,EAC5B3B,IAAA,CAACL,QAAQ;MACPiC,IAAI,EAAExB,QAAS;MACfyB,YAAY,EAAE,SAAAA,aAACnB,IAAI;QAAA,OAAKA,IAAI,CAACL,EAAE,CAACyB,QAAQ,CAAC,CAAC;MAAA,CAAC;MAC3CtB,UAAU,EAAEA,UAAW;MACvBuB,qBAAqB,EAAEhB,MAAM,CAACiB;IAAc,CAC7C;EAAC,CACE,CAAC;AAEX,CAAC;AAED,IAAMjB,MAAM,GAAGnB,UAAU,CAACqC,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACnB,CAAC;EACDH,aAAa,EAAE;IACbI,OAAO,EAAE;EACX,CAAC;EACDpB,YAAY,EAAE;IACZqB,UAAU,EAAE,MAAM;IAClBC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACT,CAAC;EACDhC,WAAW,EAAE;IACXgC,KAAK,EAAE;EACT,CAAC;EACDhB,MAAM,EAAE;IACNY,eAAe,EAAE;EACnB;AACF,CAAC,CAAC;AAEF,eAAelC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}