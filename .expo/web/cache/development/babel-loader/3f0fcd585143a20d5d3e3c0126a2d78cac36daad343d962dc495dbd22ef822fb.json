{"ast":null,"code":"import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport HomeScreen from \"../screens/Home/HomeScreen\";\nimport LoginScreen from \"../screens/Auth/LoginScreen\";\nimport SignupScreen from \"../screens/Auth/SignupScreen\";\nimport SidebarScreen from \"../components/commons/Sidebar/SidebarScreen\";\nimport HeaderScreen from \"../components/commons/Header/HeaderScreen\";\nimport FooterScreen from \"../components/commons/Footer/FooterScreen\";\nvar Stack = createNativeStackNavigator();\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\nfunction Root() {\n  return _jsxs(Drawer.Navigator, {\n    useLegacyImplementation: true,\n    children: [_jsx(Drawer.Screen, {\n      name: \"Home\",\n      component: Home\n    }), _jsx(Drawer.Screen, {\n      name: \"Profile\",\n      component: EmptyScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Settings\",\n      component: SignupScreen\n    })]\n  });\n}\nvar StackNavigator = function StackNavigator() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Sidebar\",\n        component: SidebarScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          header: function header() {\n            return _jsx(HeaderScreen, {\n              title: \"Home\"\n            });\n          }\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Signup\",\n        component: SignupScreen,\n        options: getScreenOptions()\n      }), _jsx(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen,\n        options: getScreenOptions()\n      }), _jsx(Stack.Screen, {\n        name: \"Header\",\n        component: function component() {\n          return _jsx(HeaderScreen, {\n            title: \"Header\"\n          });\n        },\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Footer\",\n        component: FooterScreen\n      })]\n    })\n  });\n};\nvar getScreenOptions = function getScreenOptions(title) {\n  return {\n    title: title,\n    headerStyle: {\n      backgroundColor: '#0bbefe',\n      borderBottomLeftRadius: 10,\n      borderBottomRightRadius: 10\n    },\n    headerTitleStyle: {\n      fontSize: 20,\n      fontWeight: 'bold',\n      color: '#fff',\n      textTransform: 'uppercase'\n    }\n  };\n};\nexport default StackNavigator;","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","HomeScreen","LoginScreen","SignupScreen","SidebarScreen","HeaderScreen","FooterScreen","Stack","createDrawerNavigator","jsx","_jsx","jsxs","_jsxs","Drawer","Root","Navigator","useLegacyImplementation","children","Screen","name","component","Home","EmptyScreen","StackNavigator","options","header","title","getScreenOptions","headerShown","headerStyle","backgroundColor","borderBottomLeftRadius","borderBottomRightRadius","headerTitleStyle","fontSize","fontWeight","color","textTransform"],"sources":["D:/Project/ReactNative Project/ReactiveNative_OTT_APP/src/navigation/StackNavigator.js"],"sourcesContent":["import * as React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\n\r\n\r\nimport HomeScreen from '../screens/Home/HomeScreen';\r\nimport LoginScreen from '../screens/Auth/LoginScreen';\r\nimport SignupScreen from '../screens/Auth/SignupScreen';\r\nimport SidebarScreen from '../components/commons/Sidebar/SidebarScreen';\r\nimport HeaderScreen from '../components/commons/Header/HeaderScreen';\r\nimport FooterScreen from '../components/commons/Footer/FooterScreen';\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\n\r\n\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nconst Drawer = createDrawerNavigator();\r\n\r\n\r\nfunction Root() {\r\n    return (\r\n      <Drawer.Navigator useLegacyImplementation>\r\n        <Drawer.Screen name=\"Home\" component={Home} />\r\n        <Drawer.Screen name=\"Profile\" component={EmptyScreen} />\r\n        <Stack.Screen name=\"Settings\" component={SignupScreen} />\r\n      </Drawer.Navigator>\r\n    );\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\nconst StackNavigator = () => {\r\n    return (\r\n        <NavigationContainer>\r\n            <Stack.Navigator>\r\n\r\n\r\n                <Stack.Screen name=\"Sidebar\" component={SidebarScreen} />\r\n\r\n\r\n                <Stack.Screen name=\"Home\" component={HomeScreen} options={{ header: () => <HeaderScreen title=\"Home\" /> }} />\r\n                <Stack.Screen name=\"Signup\" component={SignupScreen} options={getScreenOptions()} />\r\n                <Stack.Screen name=\"Login\" component={LoginScreen} options={getScreenOptions()}/>\r\n\r\n\r\n\r\n                <Stack.Screen name=\"Header\" component= {()=><HeaderScreen title='Header' />}   options={{ headerShown: false }} />\r\n                <Stack.Screen name=\"Footer\" component={FooterScreen} />\r\n            </Stack.Navigator>\r\n        </NavigationContainer>\r\n    );\r\n};\r\n\r\n\r\nconst getScreenOptions = (title) => ({\r\n    title,\r\n    headerStyle: {\r\n        backgroundColor: '#0bbefe',\r\n        borderBottomLeftRadius: 10,\r\n        borderBottomRightRadius: 10,\r\n        },\r\n    headerTitleStyle: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        color: '#fff', // Customize the color\r\n        textTransform: 'uppercase', // Convert text to uppercase\r\n    }\r\n});\r\n  \r\n\r\nexport default StackNavigator;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}