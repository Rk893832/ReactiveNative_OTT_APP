{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SettingsScreen = function SettingsScreen() {\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    notificationsEnabled = _useState2[0],\n    setNotificationsEnabled = _useState2[1];\n  var toggleNotifications = function toggleNotifications() {\n    setNotificationsEnabled(!notificationsEnabled);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.headerText,\n        children: \"Settings\"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return console.log('Back button pressed');\n        },\n        children: _jsx(Text, {\n          children: \"Back\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.section,\n      children: [_jsx(Text, {\n        style: styles.sectionHeader,\n        children: \"Account Settings\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.settingItem,\n        children: _jsx(Text, {\n          children: \"Profile Picture\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.settingItem,\n        children: _jsx(Text, {\n          children: \"Name and Email\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.settingItem,\n        children: _jsx(Text, {\n          children: \"Change Password\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.settingItem,\n        children: _jsx(Text, {\n          children: \"Log Out\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.section,\n      children: [_jsx(Text, {\n        style: styles.sectionHeader,\n        children: \"App Settings\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.settingItem,\n        children: _jsx(Text, {\n          children: \"Language\"\n        })\n      }), _jsxs(View, {\n        style: styles.settingItem,\n        children: [_jsx(Text, {\n          children: \"Notifications\"\n        }), _jsx(Switch, {\n          value: notificationsEnabled,\n          onValueChange: toggleNotifications\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: styles.settingItem,\n        children: _jsx(Text, {\n          children: \"Subtitle Language\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.settingItem,\n        children: _jsx(Text, {\n          children: \"Streaming Quality\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  headerText: {\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  section: {\n    marginBottom: 20\n  },\n  sectionHeader: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  settingItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  }\n});\nexport default SettingsScreen;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","Switch","StyleSheet","jsx","_jsx","jsxs","_jsxs","SettingsScreen","_useState","_useState2","_slicedToArray","notificationsEnabled","setNotificationsEnabled","toggleNotifications","style","styles","container","children","header","headerText","onPress","console","log","section","sectionHeader","settingItem","value","onValueChange","create","flex","padding","flexDirection","justifyContent","alignItems","marginBottom","fontSize","fontWeight"],"sources":["D:/Project/ReactNative Project/ReactiveNative_OTT_APP/src/screens/Setting/SettingScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Switch, StyleSheet } from 'react-native';\r\n\r\nconst SettingsScreen = () => {\r\n  const [notificationsEnabled, setNotificationsEnabled] = useState(true);\r\n\r\n  const toggleNotifications = () => {\r\n    setNotificationsEnabled(!notificationsEnabled);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Header */}\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerText}>Settings</Text>\r\n        <TouchableOpacity onPress={() => console.log('Back button pressed')}>\r\n          <Text>Back</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {/* Account Settings */}\r\n      <View style={styles.section}>\r\n        <Text style={styles.sectionHeader}>Account Settings</Text>\r\n        <TouchableOpacity style={styles.settingItem}>\r\n          <Text>Profile Picture</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.settingItem}>\r\n          <Text>Name and Email</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.settingItem}>\r\n          <Text>Change Password</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.settingItem}>\r\n          <Text>Log Out</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {/* App Settings */}\r\n      <View style={styles.section}>\r\n        <Text style={styles.sectionHeader}>App Settings</Text>\r\n        <TouchableOpacity style={styles.settingItem}>\r\n          <Text>Language</Text>\r\n        </TouchableOpacity>\r\n        <View style={styles.settingItem}>\r\n          <Text>Notifications</Text>\r\n          <Switch value={notificationsEnabled} onValueChange={toggleNotifications} />\r\n        </View>\r\n        <TouchableOpacity style={styles.settingItem}>\r\n          <Text>Subtitle Language</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity style={styles.settingItem}>\r\n          <Text>Streaming Quality</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {/* Add more sections and settings here */}\r\n\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  headerText: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n  },\r\n  section: {\r\n    marginBottom: 20,\r\n  },\r\n  sectionHeader: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n  settingItem: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\nexport default SettingsScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}