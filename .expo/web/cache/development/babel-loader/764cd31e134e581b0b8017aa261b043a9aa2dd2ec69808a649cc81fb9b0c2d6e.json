{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ProfileScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isEditing = _useState2[0],\n    setIsEditing = _useState2[1];\n  var _useState3 = useState('John Doe'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    username = _useState4[0],\n    setUsername = _useState4[1];\n  var _useState5 = useState('Software Developer'),\n    _useState6 = _slicedToArray(_useState5, 2),\n    bio = _useState6[0],\n    setBio = _useState6[1];\n  var _useState7 = useState('john.doe@example.com'),\n    _useState8 = _slicedToArray(_useState7, 2),\n    email = _useState8[0],\n    setEmail = _useState8[1];\n  var _useState9 = useState('New York, USA'),\n    _useState10 = _slicedToArray(_useState9, 2),\n    location = _useState10[0],\n    setLocation = _useState10[1];\n  var handleEditPress = function handleEditPress() {\n    if (isEditing) {}\n    setIsEditing(!isEditing);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.headerText,\n        children: \"Profile\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.editButton,\n        onPress: handleEditPress,\n        children: _jsx(Text, {\n          style: styles.editButtonText,\n          children: isEditing ? 'Save' : 'Edit'\n        })\n      })]\n    }), _jsx(Image, {\n      source: {\n        uri: 'https://img.freepik.com/premium-vector/avatar-profile-icon_188544-4755.jpg'\n      },\n      style: styles.profilePicture\n    }), _jsx(TextInput, {\n      style: styles.username,\n      value: username,\n      onChangeText: function onChangeText(text) {\n        return setUsername(text);\n      },\n      editable: isEditing\n    }), _jsx(TextInput, {\n      style: styles.bio,\n      value: bio,\n      onChangeText: function onChangeText(text) {\n        return setBio(text);\n      },\n      editable: isEditing\n    }), _jsx(Text, {\n      style: styles.detailLabel,\n      children: \"Email:\"\n    }), _jsx(TextInput, {\n      style: styles.detailText,\n      value: email,\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      },\n      editable: isEditing\n    }), _jsx(Text, {\n      style: styles.detailLabel,\n      children: \"Location:\"\n    }), _jsx(TextInput, {\n      style: styles.detailText,\n      value: location,\n      onChangeText: function onChangeText(text) {\n        return setLocation(text);\n      },\n      editable: isEditing\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  headerText: {\n    fontSize: 24,\n    fontWeight: 'bold'\n  },\n  editButton: {\n    backgroundColor: 'blue',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  editButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  profilePicture: {\n    width: 120,\n    height: 120,\n    borderRadius: 60,\n    marginBottom: 10\n  },\n  username: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 5,\n    borderBottomWidth: 1,\n    borderColor: 'gray'\n  },\n  bio: {\n    fontSize: 16,\n    color: 'gray',\n    marginBottom: 20,\n    borderBottomWidth: 1,\n    borderColor: 'gray'\n  },\n  detailLabel: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 5\n  },\n  detailText: {\n    fontSize: 16,\n    marginBottom: 20,\n    borderBottomWidth: 1,\n    borderColor: 'gray'\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"names":["React","useState","View","Text","Image","TextInput","TouchableOpacity","StyleSheet","jsx","_jsx","jsxs","_jsxs","ProfileScreen","_useState","_useState2","_slicedToArray","isEditing","setIsEditing","_useState3","_useState4","username","setUsername","_useState5","_useState6","bio","setBio","_useState7","_useState8","email","setEmail","_useState9","_useState10","location","setLocation","handleEditPress","style","styles","container","children","header","headerText","editButton","onPress","editButtonText","source","uri","profilePicture","value","onChangeText","text","editable","detailLabel","detailText","create","flex","padding","flexDirection","justifyContent","alignItems","marginBottom","fontSize","fontWeight","backgroundColor","paddingVertical","paddingHorizontal","borderRadius","color","width","height","borderBottomWidth","borderColor"],"sources":["D:/Project/ReactNative Project/ReactiveNative_OTT_APP/src/screens/Profile/ProfileScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, Image, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\r\n\r\nfunction ProfileScreen() {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [username, setUsername] = useState('John Doe');\r\n  const [bio, setBio] = useState('Software Developer');\r\n  const [email, setEmail] = useState('john.doe@example.com');\r\n  const [location, setLocation] = useState('New York, USA');\r\n\r\n  const handleEditPress = () => {\r\n    if (isEditing) {\r\n      // Save edited data here\r\n    }\r\n    setIsEditing(!isEditing);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerText}>Profile</Text>\r\n        <TouchableOpacity style={styles.editButton} onPress={handleEditPress}>\r\n          <Text style={styles.editButtonText}>{isEditing ? 'Save' : 'Edit'}</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n      <Image\r\n        source={{ uri: 'https://img.freepik.com/premium-vector/avatar-profile-icon_188544-4755.jpg' }} // Replace with your profile picture source\r\n        style={styles.profilePicture}\r\n      />\r\n      <TextInput\r\n        style={styles.username}\r\n        value={username}\r\n        onChangeText={text => setUsername(text)}\r\n        editable={isEditing}\r\n      />\r\n      <TextInput\r\n        style={styles.bio}\r\n        value={bio}\r\n        onChangeText={text => setBio(text)}\r\n        editable={isEditing}\r\n      />\r\n      <Text style={styles.detailLabel}>Email:</Text>\r\n      <TextInput\r\n        style={styles.detailText}\r\n        value={email}\r\n        onChangeText={text => setEmail(text)}\r\n        editable={isEditing}\r\n      />\r\n      <Text style={styles.detailLabel}>Location:</Text>\r\n      <TextInput\r\n        style={styles.detailText}\r\n        value={location}\r\n        onChangeText={text => setLocation(text)}\r\n        editable={isEditing}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  headerText: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n  },\r\n  editButton: {\r\n    backgroundColor: 'blue',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 5,\r\n  },\r\n  editButtonText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  profilePicture: {\r\n    width: 120,\r\n    height: 120,\r\n    borderRadius: 60,\r\n    marginBottom: 10,\r\n  },\r\n  username: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 5,\r\n    borderBottomWidth: 1,\r\n    borderColor: 'gray',\r\n  },\r\n  bio: {\r\n    fontSize: 16,\r\n    color: 'gray',\r\n    marginBottom: 20,\r\n    borderBottomWidth: 1,\r\n    borderColor: 'gray',\r\n  },\r\n  detailLabel: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 5,\r\n  },\r\n  detailText: {\r\n    fontSize: 16,\r\n    marginBottom: 20,\r\n    borderBottomWidth: 1,\r\n    borderColor: 'gray',\r\n  },\r\n});\r\n\r\nexport default ProfileScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}