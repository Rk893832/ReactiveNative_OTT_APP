{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport HomeScreen from \"../screens/Home/HomeScreen\";\nimport LoginScreen from \"../screens/Auth/LoginScreen\";\nimport SignupScreen from \"../screens/Auth/SignupScreen\";\nimport ChatListScreen from \"../screens/Chat/ChatListScreen\";\nimport ChatConversationScreen from \"../screens/Chat/ChatConversationScreen\";\nimport SidebarScreen from \"../components/commons/Sidebar/SidebarScreen\";\nimport HeaderScreen from \"../components/commons/Header/HeaderScreen\";\nimport FooterScreen from \"../components/commons/Footer/FooterScreen\";\nvar Stack = createNativeStackNavigator();\nvar Drawer = createDrawerNavigator();\nvar Tab = createBottomTabNavigator();\nimport View from \"react-native-web/dist/exports/View\";\nimport CommonFooter from \"../components/commons/Footer/FooterScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EmptyScreen() {\n  return _jsx(View, {});\n}\nfunction TabNavigator() {\n  return _jsxs(Tab.Navigator, {\n    tabBar: function tabBar(props) {\n      return _jsx(CommonFooter, _objectSpread({}, props));\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen,\n      options: function options(_ref) {\n        var route = _ref.route,\n          navigation = _ref.navigation;\n        return {\n          header: function header() {\n            return _jsx(HeaderScreen, {\n              route: route,\n              navigation: navigation\n            });\n          }\n        };\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Chat\",\n      component: ChatListScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ChatConversationScreen\n    })]\n  });\n}\nfunction DrawerNavigator() {\n  return _jsxs(Drawer.Navigator, {\n    gestureEnabled: true,\n    children: [_jsx(Drawer.Screen, {\n      name: \"Home1\",\n      component: TabNavigator\n    }), _jsx(Drawer.Screen, {\n      name: \"Profile\",\n      component: EmptyScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Settings\",\n      component: EmptyScreen\n    })]\n  });\n}\nvar StackNavigator = function StackNavigator() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Login\",\n    children: [_jsx(Stack.Screen, {\n      name: \"Home\",\n      component: DrawerNavigator,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen,\n      options: getStackScreenOptions()\n    }), _jsx(Stack.Screen, {\n      name: \"Signup\",\n      component: SignupScreen,\n      options: getStackScreenOptions()\n    })]\n  });\n};\nvar getStackScreenOptions = function getStackScreenOptions(title) {\n  return {\n    title: title,\n    headerStyle: {\n      backgroundColor: '#0bbefe',\n      borderBottomLeftRadius: 10,\n      borderBottomRightRadius: 10\n    },\n    headerTitleStyle: {\n      fontSize: 20,\n      fontWeight: 'bold',\n      color: '#fff',\n      textTransform: 'uppercase'\n    }\n  };\n};\nvar App = function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsx(StackNavigator, {})\n  });\n};\nexport default App;","map":{"version":3,"names":["React","StyleSheet","Button","NavigationContainer","createNativeStackNavigator","createDrawerNavigator","createBottomTabNavigator","HomeScreen","LoginScreen","SignupScreen","ChatListScreen","ChatConversationScreen","SidebarScreen","HeaderScreen","FooterScreen","Stack","Drawer","Tab","View","CommonFooter","jsx","_jsx","jsxs","_jsxs","EmptyScreen","TabNavigator","Navigator","tabBar","props","_objectSpread","children","Screen","name","component","options","_ref","route","navigation","header","DrawerNavigator","gestureEnabled","StackNavigator","initialRouteName","headerShown","getStackScreenOptions","title","headerStyle","backgroundColor","borderBottomLeftRadius","borderBottomRightRadius","headerTitleStyle","fontSize","fontWeight","color","textTransform","App"],"sources":["D:/Project/ReactNative Project/ReactiveNative_OTT_APP/src/navigation/AppNavigator.js"],"sourcesContent":["import * as React from 'react';\r\nimport {\r\n  StyleSheet, Button\r\n} from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n\r\n\r\nimport HomeScreen from '../screens/Home/HomeScreen';\r\nimport LoginScreen from '../screens/Auth/LoginScreen';\r\nimport SignupScreen from '../screens/Auth/SignupScreen';\r\nimport ChatListScreen from '../screens/Chat/ChatListScreen';\r\nimport ChatConversationScreen from '../screens/Chat/ChatConversationScreen';\r\nimport SidebarScreen from '../components/commons/Sidebar/SidebarScreen';\r\nimport HeaderScreen from '../components/commons/Header/HeaderScreen';\r\nimport FooterScreen from '../components/commons/Footer/FooterScreen';\r\n\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Drawer = createDrawerNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\n\r\n\r\nimport { View } from 'react-native';\r\nimport CommonFooter from '../components/commons/Footer/FooterScreen';\r\n\r\n\r\nfunction EmptyScreen() {\r\n  return (\r\n    <View>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction TabNavigator() {\r\n  return (\r\n    <Tab.Navigator tabBar={props => <CommonFooter {...props} />} >\r\n      <Tab.Screen name=\"Home\" component={HomeScreen} \r\n      options={({ route, navigation  }) => ({\r\n        header: () => <HeaderScreen route={route} navigation={navigation} />,\r\n      })}\r\n      />\r\n      <Tab.Screen name=\"Chat\" component={ChatListScreen} />\r\n      <Tab.Screen name=\"Profile\" component={ChatConversationScreen} />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nfunction DrawerNavigator() {\r\n  return (\r\n    <Drawer.Navigator gestureEnabled={true}>\r\n      <Drawer.Screen name=\"Home1\" component={TabNavigator}  />\r\n      <Drawer.Screen name=\"Profile\" component={EmptyScreen} />\r\n      <Stack.Screen name=\"Settings\" component={EmptyScreen} />\r\n    </Drawer.Navigator>\r\n  );\r\n}\r\n\r\nconst StackNavigator = () => {\r\n  return (\r\n    // <NavigationContainer>\r\n    <Stack.Navigator initialRouteName=\"Login\" >\r\n      <Stack.Screen name=\"Home\" component={DrawerNavigator} options={{ headerShown: false }} />\r\n      <Stack.Screen name=\"Login\" component={LoginScreen} options={getStackScreenOptions()} />\r\n      <Stack.Screen name=\"Signup\" component={SignupScreen} options={getStackScreenOptions()} />\r\n\r\n      {/* <Stack.Screen name=\"Header\" component={() => <HeaderScreen title='Header' />} options={{ headerShown: false }} />\r\n      <Stack.Screen name=\"Footer\" component={FooterScreen} />\r\n      <Stack.Screen name=\"Sidebar\" component={SidebarScreen} /> */}\r\n    </Stack.Navigator>\r\n    // </NavigationContainer>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst getStackScreenOptions = (title) => ({\r\n  title,\r\n  headerStyle: {\r\n    backgroundColor: '#0bbefe',\r\n    borderBottomLeftRadius: 10,\r\n    borderBottomRightRadius: 10,\r\n  },\r\n  headerTitleStyle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#fff', // Customize the color\r\n    textTransform: 'uppercase', // Convert text to uppercase\r\n  }\r\n});\r\n\r\n\r\n\r\nconst App = () => (\r\n  <NavigationContainer>\r\n    <StackNavigator />\r\n  </NavigationContainer>\r\n);\r\nexport default App;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}