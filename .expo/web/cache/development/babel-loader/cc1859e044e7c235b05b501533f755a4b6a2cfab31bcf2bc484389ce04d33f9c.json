{"ast":null,"code":"import { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { LineChart } from 'react-native-chart-kit';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Open up App.js to start working on your app!\"\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    }), _jsx(Button, {\n      title: \"Press Me\",\n      style: \"blue\"\n    }), _jsx(TouchableOpacity, {\n      style: [styles.button, isHovered && styles.buttonHovered],\n      onPressIn: handlePressIn,\n      onPressOut: handlePressOut,\n      children: _jsx(Text, {\n        style: [styles.buttonText, isHovered && styles.buttonTextHovered],\n        children: \"Hover Me\"\n      })\n    }), _jsx(LineChart, {\n      data: data,\n      width: 350,\n      height: 220,\n      chartConfig: chartConfig\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    backgroundColor: '#3498db',\n    padding: 10,\n    borderRadius: 5\n  },\n  buttonHovered: {\n    backgroundColor: '#2980b9'\n  },\n  buttonText: {\n    color: 'white',\n    textAlign: 'center'\n  },\n  buttonTextHovered: {\n    color: 'yellow'\n  }\n});","map":{"version":3,"names":["useState","StatusBar","Button","StyleSheet","Text","View","TouchableOpacity","LineChart","jsx","_jsx","jsxs","_jsxs","App","style","styles","container","children","title","button","isHovered","buttonHovered","onPressIn","handlePressIn","onPressOut","handlePressOut","buttonText","buttonTextHovered","data","width","height","chartConfig","create","flex","backgroundColor","alignItems","justifyContent","padding","borderRadius","color","textAlign"],"sources":["D:/Project/ReactNative Project/ReactiveNative_OTT_APP/App.js"],"sourcesContent":["import {useState} from 'react'\nimport { StatusBar } from 'expo-status-bar';\nimport { Button, StyleSheet, Text, View,TouchableOpacity } from 'react-native';\nimport { LineChart } from 'react-native-chart-kit';\n\n\nexport default function App() {\n\n\n  return (\n    <View style={styles.container}>\n      <Text>Open up App.js to start working on your app!</Text>\n      <StatusBar style=\"auto\" />\n      <Button  title=\"Press Me\" style=\"blue\"/>\n\n      <TouchableOpacity\n      style={[styles.button, isHovered && styles.buttonHovered]}\n      onPressIn={handlePressIn}\n      onPressOut={handlePressOut}\n    >\n      <Text style={[styles.buttonText, isHovered && styles.buttonTextHovered]}>Hover Me</Text>\n    </TouchableOpacity>\n\n    <LineChart\n        data={data}\n        width={350}\n        height={220}\n        chartConfig={chartConfig}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n   button: {\n    backgroundColor: '#3498db',\n    padding: 10,\n    borderRadius: 5,\n  },\n  buttonHovered: {\n    backgroundColor: '#2980b9',\n  },\n  buttonText: {\n    color: 'white',\n    textAlign: 'center',\n  },\n  buttonTextHovered: {\n    color: 'yellow', // Change this to your desired text color for hover effect\n  },\n  // button:{\n  //   color: blue,\n  //   backgroundColor: '#3498db',\n  //   padding: 10,\n  //   borderRadius: 5,\n\n  // },\n\n});\n"],"mappings":"AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,SAASC,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAE5C,SAASC,SAAS,QAAQ,wBAAwB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGnD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAG5B,OACED,KAAA,CAACN,IAAI;IAACQ,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BP,IAAA,CAACL,IAAI;MAAAY,QAAA,EAAC;IAA4C,CAAM,CAAC,EACzDP,IAAA,CAACR,SAAS;MAACY,KAAK,EAAC;IAAM,CAAE,CAAC,EAC1BJ,IAAA,CAACP,MAAM;MAAEe,KAAK,EAAC,UAAU;MAACJ,KAAK,EAAC;IAAM,CAAC,CAAC,EAExCJ,IAAA,CAACH,gBAAgB;MACjBO,KAAK,EAAE,CAACC,MAAM,CAACI,MAAM,EAAEC,SAAS,IAAIL,MAAM,CAACM,aAAa,CAAE;MAC1DC,SAAS,EAAEC,aAAc;MACzBC,UAAU,EAAEC,cAAe;MAAAR,QAAA,EAE3BP,IAAA,CAACL,IAAI;QAACS,KAAK,EAAE,CAACC,MAAM,CAACW,UAAU,EAAEN,SAAS,IAAIL,MAAM,CAACY,iBAAiB,CAAE;QAAAV,QAAA,EAAC;MAAQ,CAAM;IAAC,CACxE,CAAC,EAEnBP,IAAA,CAACF,SAAS;MACNoB,IAAI,EAAEA,IAAK;MACXC,KAAK,EAAE,GAAI;MACXC,MAAM,EAAE,GAAI;MACZC,WAAW,EAAEA;IAAY,CAC1B,CAAC;EAAA,CACE,CAAC;AAEX;AAEA,IAAMhB,MAAM,GAAGX,UAAU,CAAC4B,MAAM,CAAC;EAC/BhB,SAAS,EAAE;IACTiB,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACAjB,MAAM,EAAE;IACPe,eAAe,EAAE,SAAS;IAC1BG,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE;EAChB,CAAC;EACDjB,aAAa,EAAE;IACba,eAAe,EAAE;EACnB,CAAC;EACDR,UAAU,EAAE;IACVa,KAAK,EAAE,OAAO;IACdC,SAAS,EAAE;EACb,CAAC;EACDb,iBAAiB,EAAE;IACjBY,KAAK,EAAE;EACT;AASF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}