{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SignupScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState({\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirm_password: \"\"\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userData = _useState4[0],\n    setUserData = _useState4[1];\n  var handleOnChange = function handleOnChange(name, value) {\n    setUserData(function (prevValues) {\n      return _objectSpread(_objectSpread({}, prevValues), {}, _defineProperty({}, name, value));\n    });\n  };\n  var handleSubmit = function handleSubmit() {\n    setIsLoading(true);\n  };\n  console.log();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.containerheading,\n      children: \"Signup Form !!\"\n    }), _jsx(StatusBar, {\n      style: \"dark-content\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Name\",\n      value: userData.name,\n      onChangeText: function onChangeText(text) {\n        return handleOnChange('name', text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      value: userData.email,\n      onChangeText: function onChangeText(text) {\n        return handleOnChange('email', text);\n      },\n      keyboardType: \"email-address\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      value: userData.password,\n      onChangeText: function onChangeText(text) {\n        return handleOnChange('password', text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Confirm Password\",\n      value: userData.confirm_password,\n      onChangeText: function onChangeText(text) {\n        return handleOnChange('confirm_password', text);\n      }\n    }), isLoading && _jsxs(_Fragment, {\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"green\"\n      }), _jsx(Text, {\n        style: styles.loader,\n        children: \"Loading...\"\n      })]\n    }), !isLoading && _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleSubmit,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Submit\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  containerheading: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  input: {\n    fontSize: 18,\n    width: '80%',\n    marginBottom: 20,\n    padding: 10,\n    borderWidth: 2,\n    borderColor: '#ccc',\n    borderRadius: 5\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 18,\n    padding: 10\n  },\n  button: {\n    backgroundColor: '#009933',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 10\n  },\n  loader: {\n    fontSize: 25\n  }\n});","map":{"version":3,"names":["useState","StatusBar","StyleSheet","Text","View","TextInput","TouchableOpacity","ActivityIndicator","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","SignupScreen","_useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","name","email","password","confirm_password","_useState4","userData","setUserData","handleOnChange","value","prevValues","_objectSpread","_defineProperty","handleSubmit","console","log","style","styles","container","children","containerheading","input","placeholder","onChangeText","text","keyboardType","size","color","loader","button","onPress","buttonText","create","flex","backgroundColor","alignItems","justifyContent","fontSize","fontWeight","marginBottom","width","padding","borderWidth","borderColor","borderRadius","paddingVertical","paddingHorizontal"],"sources":["D:/Project/ReactNative Project/ReactiveNative_OTT_APP/src/screens/Auth/SignupScreen.js"],"sourcesContent":["import { useState } from 'react'\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport {\r\n  StyleSheet, Text, View, TextInput,\r\n  TouchableOpacity, ActivityIndicator\r\n} from 'react-native';\r\n// import { TextInput } from 'react-native-web';\r\n\r\n\r\nexport default function SignupScreen() {\r\n\r\n  const [isLoading, setIsLoading] = useState(false); // State for loader\r\n  let [userData, setUserData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\"\r\n  })\r\n\r\n  const handleOnChange = (name, value) => {\r\n\r\n    setUserData(prevValues => ({\r\n      ...prevValues,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setIsLoading(true)\r\n  }\r\n\r\n  console.log()\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.containerheading}>Signup Form !!</Text>\r\n      <StatusBar style=\"dark-content\" />\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Name\"\r\n        value={userData.name}\r\n        onChangeText={(text) => handleOnChange('name', text)}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Email\"\r\n        value={userData.email}\r\n        onChangeText={(text) => handleOnChange('email', text)}\r\n        keyboardType=\"email-address\"\r\n      />\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Password\"\r\n        value={userData.password}\r\n        onChangeText={(text) => handleOnChange('password', text)}\r\n      />\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Confirm Password\"\r\n        value={userData.confirm_password}\r\n        onChangeText={(text) => handleOnChange('confirm_password', text)}\r\n      />\r\n\r\n      {isLoading && (\r\n        <>\r\n          <ActivityIndicator size=\"large\" color=\"green\" />\r\n          <Text style={styles.loader}>Loading...</Text>\r\n        </>\r\n      )}\r\n\r\n      {!isLoading && (\r\n        <TouchableOpacity style={styles.button} onPress={handleSubmit}>\r\n          <Text style={styles.buttonText}>Submit</Text>\r\n        </TouchableOpacity>\r\n      )}\r\n\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  containerheading: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n  },\r\n\r\n  input: {\r\n    fontSize: 18,\r\n    width: '80%',\r\n    marginBottom: 20,\r\n    padding: 10,\r\n    borderWidth: 2,\r\n    borderColor: '#ccc',\r\n    borderRadius: 5,\r\n  },\r\n\r\n  buttonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    fontSize: 18,\r\n    padding: 10\r\n  },\r\n  button: {\r\n    backgroundColor: '#009933',\r\n    paddingVertical: 12,     // Increase vertical padding to make the button taller\r\n    paddingHorizontal: 24,   // Increase horizontal padding to make the button wider\r\n    borderRadius: 10,        // Adjust the border radius for curved corners\r\n  },\r\n\r\n  loader: {\r\n    fontSize: 25,\r\n  }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}