{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function handleLogin() {};\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.heading,\n      children: \"Login\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      }\n    }), _jsx(Button, {\n      title: \"Login\",\n      onPress: handleLogin\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  heading: {\n    fontSize: 24,\n    marginBottom: 20\n  },\n  input: {\n    width: '80%',\n    padding: 10,\n    marginBottom: 10,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5\n  }\n});\nexport default LoginScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","StyleSheet","jsx","_jsx","jsxs","_jsxs","LoginScreen","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleLogin","style","styles","container","children","heading","input","placeholder","onChangeText","text","secureTextEntry","title","onPress","create","flex","justifyContent","alignItems","fontSize","marginBottom","width","padding","borderWidth","borderColor","borderRadius"],"sources":["D:/Project/ReactNative Project/ReactiveNative_OTT_APP/src/screens/Auth/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button, StyleSheet } from 'react-native';\r\n\r\nconst LoginScreen = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleLogin = () => {\r\n    // Perform login logic here\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.heading}>Login</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Email\"\r\n        onChangeText={text => setEmail(text)}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Password\"\r\n        secureTextEntry\r\n        onChangeText={text => setPassword(text)}\r\n      />\r\n      <Button title=\"Login\" onPress={handleLogin} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  heading: {\r\n    fontSize: 24,\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    width: '80%',\r\n    padding: 10,\r\n    marginBottom: 10,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 5,\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGxC,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EACxB,IAAAC,SAAA,GAA0BX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAgChB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS,CAE1B,CAAC;EAED,OACEX,KAAA,CAACR,IAAI;IAACoB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BjB,IAAA,CAACL,IAAI;MAACmB,KAAK,EAAEC,MAAM,CAACG,OAAQ;MAAAD,QAAA,EAAC;IAAK,CAAM,CAAC,EACzCjB,IAAA,CAACJ,SAAS;MACRkB,KAAK,EAAEC,MAAM,CAACI,KAAM;MACpBC,WAAW,EAAC,OAAO;MACnBC,YAAY,EAAE,SAAAA,aAAAC,IAAI;QAAA,OAAId,QAAQ,CAACc,IAAI,CAAC;MAAA;IAAC,CACtC,CAAC,EACFtB,IAAA,CAACJ,SAAS;MACRkB,KAAK,EAAEC,MAAM,CAACI,KAAM;MACpBC,WAAW,EAAC,UAAU;MACtBG,eAAe;MACfF,YAAY,EAAE,SAAAA,aAAAC,IAAI;QAAA,OAAIV,WAAW,CAACU,IAAI,CAAC;MAAA;IAAC,CACzC,CAAC,EACFtB,IAAA,CAACH,MAAM;MAAC2B,KAAK,EAAC,OAAO;MAACC,OAAO,EAAEZ;IAAY,CAAE,CAAC;EAAA,CAC1C,CAAC;AAEX,CAAC;AAED,IAAME,MAAM,GAAGjB,UAAU,CAAC4B,MAAM,CAAC;EAC/BV,SAAS,EAAE;IACTW,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDX,OAAO,EAAE;IACPY,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE;EAChB,CAAC;EACDZ,KAAK,EAAE;IACLa,KAAK,EAAE,KAAK;IACZC,OAAO,EAAE,EAAE;IACXF,YAAY,EAAE,EAAE;IAChBG,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEF,eAAejC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}