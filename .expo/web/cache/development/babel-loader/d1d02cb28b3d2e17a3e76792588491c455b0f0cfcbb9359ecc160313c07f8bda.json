{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Feather } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SidebarScreen = function SidebarScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    sidebarVisible = _useState2[0],\n    setSidebarVisible = _useState2[1];\n  var toggleSidebar = function toggleSidebar() {\n    setSidebarVisible(!sidebarVisible);\n  };\n  return _jsxs(View, {\n    style: styles.app,\n    children: [_jsx(TouchableOpacity, {\n      style: styles.toggleButton,\n      onPress: toggleSidebar,\n      children: _jsx(Feather, {\n        name: \"sidebar\",\n        size: 24,\n        color: \"black\"\n      })\n    }), _jsx(View, {\n      style: [styles.sidebar, sidebarVisible && styles.sidebarActive],\n      children: _jsxs(View, {\n        style: styles.sidebarContent,\n        children: [_jsx(Text, {\n          style: styles.sidebarLink,\n          children: \"Home\"\n        }), _jsx(Text, {\n          style: styles.sidebarLink,\n          children: \"Profile\"\n        }), _jsx(Text, {\n          style: styles.sidebarLink,\n          children: \"Settings\"\n        }), _jsx(Text, {\n          style: styles.sidebarLink,\n          children: \"Messages\"\n        }), _jsx(Text, {\n          style: styles.sidebarLink,\n          children: \"Logout\"\n        })]\n      })\n    }), _jsx(View, {\n      style: styles.content\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  app: {\n    flex: 1,\n    flexDirection: 'row',\n    overflow: 'hidden'\n  },\n  toggleButton: {\n    position: 'absolute',\n    top: 20,\n    left: 20,\n    zIndex: 999\n  },\n  toggleButton: {},\n  sidebar: {\n    width: 250,\n    backgroundColor: '#333',\n    color: '#fff',\n    transitionProperty: 'transform',\n    transitionDuration: 300,\n    transform: [{\n      translateX: -250\n    }],\n    overflowY: 'auto'\n  },\n  sidebarActive: {\n    transform: [{\n      translateX: 0\n    }]\n  },\n  sidebarContent: {\n    paddingTop: 20,\n    paddingHorizontal: 20\n  },\n  sidebarLink: {\n    color: '#fff',\n    fontSize: 18,\n    marginBottom: 15\n  },\n  content: {\n    flex: 1,\n    backgroundColor: '#f0f0f0',\n    padding: 20\n  }\n});\nexport default SidebarScreen;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","StyleSheet","Feather","jsx","_jsx","jsxs","_jsxs","SidebarScreen","_useState","_useState2","_slicedToArray","sidebarVisible","setSidebarVisible","toggleSidebar","style","styles","app","children","toggleButton","onPress","name","size","color","sidebar","sidebarActive","sidebarContent","sidebarLink","content","create","flex","flexDirection","overflow","position","top","left","zIndex","width","backgroundColor","transitionProperty","transitionDuration","transform","translateX","overflowY","paddingTop","paddingHorizontal","fontSize","marginBottom","padding"],"sources":["D:/Project/ReactNative Project/ReactiveNative_OTT_APP/src/components/commons/Sidebar/SidebarScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity,StyleSheet } from 'react-native';\r\nimport { Feather } from '@expo/vector-icons';\r\n\r\nconst SidebarScreen = () => {\r\n  const [sidebarVisible, setSidebarVisible] = useState(false);\r\n\r\n  const toggleSidebar = () => {\r\n    setSidebarVisible(!sidebarVisible);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.app}>\r\n      <TouchableOpacity style={styles.toggleButton} onPress={toggleSidebar}>\r\n      <Feather name=\"sidebar\" size={24} color=\"black\" />\r\n      </TouchableOpacity>\r\n      <View style={[styles.sidebar, sidebarVisible && styles.sidebarActive]}>\r\n        <View style={styles.sidebarContent}>\r\n          <Text style={styles.sidebarLink}>Home</Text>\r\n          <Text style={styles.sidebarLink}>Profile</Text>\r\n          <Text style={styles.sidebarLink}>Settings</Text>\r\n          <Text style={styles.sidebarLink}>Messages</Text>\r\n          <Text style={styles.sidebarLink}>Logout</Text>\r\n        </View>\r\n      </View>\r\n      <View style={styles.content}>\r\n        {/* Your app's main content goes here */}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  app: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    overflow: 'hidden',\r\n  },\r\n  toggleButton: {\r\n    position: 'absolute',\r\n    top: 20,\r\n    left: 20,\r\n    zIndex: 999,\r\n  },\r\n  toggleButton:{\r\n\r\n  },\r\n  sidebar: {\r\n    width: 250,\r\n    backgroundColor: '#333',\r\n    color: '#fff',\r\n    transitionProperty: 'transform',\r\n    transitionDuration: 300,\r\n    transform: [{ translateX: -250 }],\r\n    overflowY: 'auto',\r\n  },\r\n  sidebarActive: {\r\n    transform: [{ translateX: 0 }],\r\n  },\r\n  sidebarContent: {\r\n    paddingTop: 20,\r\n    paddingHorizontal: 20,\r\n  },\r\n  sidebarLink: {\r\n    color: '#fff',\r\n    fontSize: 18,\r\n    marginBottom: 15,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    backgroundColor: '#f0f0f0',\r\n    padding: 20,\r\n  },\r\n});\r\n\r\n\r\nexport default SidebarScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}