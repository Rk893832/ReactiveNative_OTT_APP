{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createDrawerNavigator, DrawerContentScrollView } from '@react-navigation/drawer';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport HomeScreen from \"../screens/Home/HomeScreen\";\nimport LoginScreen from \"../screens/Auth/LoginScreen\";\nimport SignupScreen from \"../screens/Auth/SignupScreen\";\nimport ChatListScreen from \"../screens/Chat/ChatListScreen\";\nimport ChatConversationScreen from \"../screens/Chat/ChatConversationScreen\";\nimport SidebarScreen from \"../components/commons/Sidebar/SidebarScreen\";\nimport HeaderScreen from \"../components/commons/Header/HeaderScreen\";\nimport FooterScreen from \"../components/commons/Footer/FooterScreen\";\nvar Stack = createNativeStackNavigator();\nvar Drawer = createDrawerNavigator();\nvar Tab = createBottomTabNavigator();\nimport CommonFooter from \"../components/commons/Footer/FooterScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EmptyScreen() {\n  return _jsx(View, {});\n}\nfunction TabNavigator() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n            color = _ref2.color,\n            size = _ref2.size;\n          var iconName;\n          if (route.name === 'Home') {\n            iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\n          } else if (route.name === 'Settings') {\n            iconName = focused ? 'ios-list' : 'ios-list-outline';\n          }\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: 'tomato',\n        tabBarInactiveTintColor: 'gray'\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Chat\",\n      component: ChatListScreen\n    }), _jsx(Tab.Screen, {\n      name: \"Profile\",\n      component: ChatConversationScreen\n    })]\n  });\n}\nfunction CustomDrawerContent(props) {\n  return _jsx(DrawerContentScrollView, _objectSpread(_objectSpread({}, props), {}, {\n    children: _jsxs(View, {\n      style: styles.drawerItemsContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.drawerItem,\n        onPress: function onPress() {\n          return props.navigation.navigate('Home1');\n        },\n        children: _jsx(Text, {\n          style: styles.drawerItemText,\n          children: \"Home\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.drawerItem,\n        onPress: function onPress() {\n          return props.navigation.navigate('Profile');\n        },\n        children: _jsx(Text, {\n          style: styles.drawerItemText,\n          children: \"Profile\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.drawerItem,\n        onPress: function onPress() {\n          return props.navigation.navigate('Settings');\n        },\n        children: _jsx(Text, {\n          style: styles.drawerItemText,\n          children: \"Settings\"\n        })\n      })]\n    })\n  }));\n}\nvar styles = StyleSheet.create({\n  drawerItemsContainer: {\n    marginTop: 20\n  },\n  drawerItem: {\n    paddingVertical: 10,\n    paddingHorizontal: 20\n  },\n  drawerItemText: {\n    fontSize: 18\n  }\n});\nfunction DrawerNavigator() {\n  var dimensions = useWindowDimensions();\n  var isLargeScreen = dimensions.width >= 768;\n  return _jsxs(Drawer.Navigator, {\n    gestureEnabled: true,\n    screenOptions: {\n      drawerStyle: {\n        backgroundColor: 'white',\n        width: 240,\n        drawerType: isLargeScreen ? 'permanent' : 'back',\n        drawerStyle: isLargeScreen ? null : {\n          width: '100%'\n        },\n        overlayColor: 'transparent'\n      }\n    },\n    children: [_jsx(Drawer.Screen, {\n      name: \"Home1\",\n      component: TabNavigator\n    }), _jsx(Drawer.Screen, {\n      name: \"Profile\",\n      component: EmptyScreen\n    }), _jsx(Drawer.Screen, {\n      name: \"Settings\",\n      component: EmptyScreen\n    })]\n  });\n}\nvar StackNavigator = function StackNavigator() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Login\",\n    children: [_jsx(Stack.Screen, {\n      name: \"Home\",\n      component: DrawerNavigator,\n      options: {\n        headerShown: false\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen,\n      options: getStackScreenOptions()\n    }), _jsx(Stack.Screen, {\n      name: \"Signup\",\n      component: SignupScreen,\n      options: getStackScreenOptions()\n    })]\n  });\n};\nvar getStackScreenOptions = function getStackScreenOptions(title) {\n  return {\n    title: title,\n    headerStyle: {\n      backgroundColor: '#0bbefe',\n      borderBottomLeftRadius: 10,\n      borderBottomRightRadius: 10\n    },\n    headerTitleStyle: {\n      fontSize: 20,\n      fontWeight: 'bold',\n      color: '#fff',\n      textTransform: 'uppercase'\n    }\n  };\n};\nvar App = function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsx(StackNavigator, {})\n  });\n};\nexport default App;","map":{"version":3,"names":["React","Text","TouchableOpacity","View","StyleSheet","NavigationContainer","createNativeStackNavigator","createDrawerNavigator","DrawerContentScrollView","createBottomTabNavigator","useWindowDimensions","HomeScreen","LoginScreen","SignupScreen","ChatListScreen","ChatConversationScreen","SidebarScreen","HeaderScreen","FooterScreen","Stack","Drawer","Tab","CommonFooter","jsx","_jsx","jsxs","_jsxs","EmptyScreen","TabNavigator","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","Ionicons","tabBarActiveTintColor","tabBarInactiveTintColor","children","Screen","component","CustomDrawerContent","props","_objectSpread","style","styles","drawerItemsContainer","drawerItem","onPress","navigation","navigate","drawerItemText","create","marginTop","paddingVertical","paddingHorizontal","fontSize","DrawerNavigator","dimensions","isLargeScreen","width","gestureEnabled","drawerStyle","backgroundColor","drawerType","overlayColor","StackNavigator","initialRouteName","options","headerShown","getStackScreenOptions","title","headerStyle","borderBottomLeftRadius","borderBottomRightRadius","headerTitleStyle","fontWeight","textTransform","App"],"sources":["D:/Project/ReactNative Project/ReactiveNative_OTT_APP/src/navigation/AppNavigator.js"],"sourcesContent":["import * as React from 'react';\r\nimport { Text, TouchableOpacity,View,StyleSheet } from 'react-native';\r\n\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createDrawerNavigator,DrawerContentScrollView } from '@react-navigation/drawer';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { useWindowDimensions } from 'react-native';\r\n\r\n\r\nimport HomeScreen from '../screens/Home/HomeScreen';\r\nimport LoginScreen from '../screens/Auth/LoginScreen';\r\nimport SignupScreen from '../screens/Auth/SignupScreen';\r\nimport ChatListScreen from '../screens/Chat/ChatListScreen';\r\nimport ChatConversationScreen from '../screens/Chat/ChatConversationScreen';\r\nimport SidebarScreen from '../components/commons/Sidebar/SidebarScreen';\r\nimport HeaderScreen from '../components/commons/Header/HeaderScreen';\r\nimport FooterScreen from '../components/commons/Footer/FooterScreen';\r\n\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Drawer = createDrawerNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\n\r\n\r\nimport CommonFooter from '../components/commons/Footer/FooterScreen';\r\n\r\n\r\nfunction EmptyScreen() {\r\n  return (\r\n    <View>\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction TabNavigator() {\r\n  return (\r\n    <Tab.Navigator screenOptions={({ route }) => ({\r\n      tabBarIcon: ({ focused, color, size }) => {\r\n        let iconName;\r\n\r\n        if (route.name === 'Home') {\r\n          iconName = focused\r\n            ? 'ios-information-circle'\r\n            : 'ios-information-circle-outline';\r\n        } else if (route.name === 'Settings') {\r\n          iconName = focused ? 'ios-list' : 'ios-list-outline';\r\n        }\r\n\r\n        // You can return any component that you like here!\r\n        return <Ionicons name={iconName} size={size} color={color} />;\r\n      },\r\n      tabBarActiveTintColor: 'tomato',\r\n      tabBarInactiveTintColor: 'gray',\r\n    })} >\r\n      <Tab.Screen name=\"Home\" component={HomeScreen} \r\n      // options={({ route, navigation  }) => ({\r\n      //   header: () => <HeaderScreen route={route} navigation={navigation} />,\r\n      // })}\r\n      />\r\n      <Tab.Screen name=\"Chat\" component={ChatListScreen} />\r\n      <Tab.Screen name=\"Profile\" component={ChatConversationScreen} />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nfunction CustomDrawerContent(props) {\r\n  return (\r\n    <DrawerContentScrollView {...props}>\r\n      <View style={styles.drawerItemsContainer}>\r\n        <TouchableOpacity\r\n          style={styles.drawerItem}\r\n          onPress={() => props.navigation.navigate('Home1')}\r\n        >\r\n          <Text style={styles.drawerItemText}>Home</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          style={styles.drawerItem}\r\n          onPress={() => props.navigation.navigate('Profile')}\r\n        >\r\n          <Text style={styles.drawerItemText}>Profile</Text>\r\n        </TouchableOpacity>\r\n        <TouchableOpacity\r\n          style={styles.drawerItem}\r\n          onPress={() => props.navigation.navigate('Settings')}\r\n        >\r\n          <Text style={styles.drawerItemText}>Settings</Text>\r\n        </TouchableOpacity>\r\n        {/* Add more drawer items as needed */}\r\n      </View>\r\n    </DrawerContentScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  drawerItemsContainer: {\r\n    marginTop: 20,\r\n  },\r\n  drawerItem: {\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n  },\r\n  drawerItemText: {\r\n    fontSize: 18, // Adjust the font size as needed\r\n  },\r\n});\r\nfunction DrawerNavigator() {\r\n\r\n  const dimensions = useWindowDimensions();\r\n  const isLargeScreen = dimensions.width >= 768;\r\n\r\n  return (\r\n    <Drawer.Navigator gestureEnabled={true}  \r\n    // drawerContent={ props => CustomDrawerContent(props) }\r\n    // defaultStatus=\"open\"\r\n    screenOptions={{\r\n      drawerStyle: {\r\n        backgroundColor: 'white',\r\n        width: 240,\r\n        drawerType: isLargeScreen ? 'permanent' : 'back',\r\n        drawerStyle: isLargeScreen ? null : { width: '100%' },\r\n        overlayColor: 'transparent',\r\n      },\r\n    }}>\r\n      <Drawer.Screen name=\"Home1\" component={TabNavigator}  />\r\n      <Drawer.Screen name=\"Profile\" component={EmptyScreen} />\r\n      <Drawer.Screen name=\"Settings\" component={EmptyScreen} />\r\n    </Drawer.Navigator>\r\n  );\r\n}\r\n\r\nconst StackNavigator = () => {\r\n  return (\r\n    // <NavigationContainer>\r\n    <Stack.Navigator initialRouteName=\"Login\" >\r\n      <Stack.Screen name=\"Home\" component={DrawerNavigator} options={{ headerShown: false }} />\r\n      <Stack.Screen name=\"Login\" component={LoginScreen} options={getStackScreenOptions()} />\r\n      <Stack.Screen name=\"Signup\" component={SignupScreen} options={getStackScreenOptions()} />\r\n\r\n      {/* <Stack.Screen name=\"Header\" component={() => <HeaderScreen title='Header' />} options={{ headerShown: false }} />\r\n      <Stack.Screen name=\"Footer\" component={FooterScreen} />\r\n      <Stack.Screen name=\"Sidebar\" component={SidebarScreen} /> */}\r\n    </Stack.Navigator>\r\n    // </NavigationContainer>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst getStackScreenOptions = (title) => ({\r\n  title,\r\n  headerStyle: {\r\n    backgroundColor: '#0bbefe',\r\n    borderBottomLeftRadius: 10,\r\n    borderBottomRightRadius: 10,\r\n  },\r\n  headerTitleStyle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#fff', // Customize the color\r\n    textTransform: 'uppercase', // Convert text to uppercase\r\n  }\r\n});\r\n\r\n\r\n\r\nconst App = () => (\r\n  <NavigationContainer>\r\n    <StackNavigator />\r\n  </NavigationContainer>\r\n);\r\nexport default App;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}