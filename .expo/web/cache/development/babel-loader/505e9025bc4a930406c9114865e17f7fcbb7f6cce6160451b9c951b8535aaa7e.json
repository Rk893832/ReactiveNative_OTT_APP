{"ast":null,"code":"import * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport HomeScreen from \"../screens/Home/HomeScreen\";\nimport LoginScreen from \"../screens/Auth/LoginScreen\";\nimport SignupScreen from \"../screens/Auth/SignupScreen\";\nimport SidebarScreen from \"../components/commons/Sidebar/SidebarScreen\";\nimport HeaderScreen from \"../components/commons/Header/HeaderScreen\";\nimport FooterScreen from \"../components/commons/Footer/FooterScreen\";\nvar Stack = createNativeStackNavigator();\nvar Drawer = createDrawerNavigator();\nvar Tab = createBottomTabNavigator();\nimport View from \"react-native-web/dist/exports/View\";\nimport CommonFooter from \"../components/commons/Footer/FooterScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EmptyScreen() {\n  return _jsx(View, {});\n}\nfunction Home() {\n  return _jsxs(Tab.Navigator, {\n    tabBar: function tabBar() {\n      return _jsx(CommonFooter, {});\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"home\",\n      component: AppNavigator\n    }), _jsx(Tab.Screen, {\n      name: \"chat\",\n      component: EmptyScreen\n    }), _jsx(Tab.Screen, {\n      name: \"profile\",\n      component: EmptyScreen\n    })]\n  });\n}\nfunction Root() {\n  return _jsx(Drawer.Navigator, {\n    children: _jsx(Drawer.Screen, {\n      name: \"home\",\n      component: Home\n    })\n  });\n}\nvar AppNavigator = function AppNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"home\",\n      component: HomeScreen,\n      options: {\n        header: function header() {\n          return _jsx(HeaderScreen, {\n            title: \"Home\"\n          });\n        }\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Footer\",\n      component: FooterScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Sidebar\",\n      component: SidebarScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Signup\",\n      component: SignupScreen,\n      options: getStackScreenOptions()\n    }), _jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen,\n      options: getStackScreenOptions()\n    }), _jsx(Stack.Screen, {\n      name: \"Header\",\n      component: function component() {\n        return _jsx(HeaderScreen, {\n          title: \"Header\"\n        });\n      },\n      options: {\n        headerShown: false\n      }\n    })]\n  });\n};\nvar getStackScreenOptions = function getStackScreenOptions(title) {\n  return {\n    title: title,\n    headerStyle: {\n      backgroundColor: '#0bbefe',\n      borderBottomLeftRadius: 10,\n      borderBottomRightRadius: 10\n    },\n    headerTitleStyle: {\n      fontSize: 20,\n      fontWeight: 'bold',\n      color: '#fff',\n      textTransform: 'uppercase'\n    }\n  };\n};\nvar App = function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsx(Home, {})\n  });\n};\nexport default App;","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","createDrawerNavigator","createBottomTabNavigator","HomeScreen","LoginScreen","SignupScreen","SidebarScreen","HeaderScreen","FooterScreen","Stack","Drawer","Tab","View","CommonFooter","jsx","_jsx","jsxs","_jsxs","EmptyScreen","Home","Navigator","tabBar","children","Screen","name","component","AppNavigator","Root","options","header","title","getStackScreenOptions","headerShown","headerStyle","backgroundColor","borderBottomLeftRadius","borderBottomRightRadius","headerTitleStyle","fontSize","fontWeight","color","textTransform","App"],"sources":["D:/Project/ReactNative Project/ReactiveNative_OTT_APP/src/navigation/AppNavigator.js"],"sourcesContent":["import * as React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\n\r\n\r\nimport HomeScreen from '../screens/Home/HomeScreen';\r\nimport LoginScreen from '../screens/Auth/LoginScreen';\r\nimport SignupScreen from '../screens/Auth/SignupScreen';\r\nimport SidebarScreen from '../components/commons/Sidebar/SidebarScreen';\r\nimport HeaderScreen from '../components/commons/Header/HeaderScreen';\r\nimport FooterScreen from '../components/commons/Footer/FooterScreen';\r\n\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst Drawer = createDrawerNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\n\r\n\r\nimport { View } from 'react-native';\r\nimport CommonFooter from '../components/commons/Footer/FooterScreen';\r\n\r\n  \r\nfunction EmptyScreen() {\r\n    return (\r\n        <View>\r\n\r\n       \r\n      </View>\r\n    )\r\n  }\r\n\r\nfunction Home() {\r\n    return (\r\n        <Tab.Navigator\r\n        tabBar={() => <CommonFooter/>}>       \r\n       <Tab.Screen name=\"home\" component={AppNavigator}/>\r\n        <Tab.Screen name=\"chat\" component={EmptyScreen}  />\r\n        <Tab.Screen name=\"profile\" component={EmptyScreen} />\r\n      </Tab.Navigator>\r\n    );\r\n  }\r\n\r\nfunction Root() {\r\nreturn (\r\n    <Drawer.Navigator >\r\n    <Drawer.Screen name=\"home\" component={Home} />\r\n    {/* <Drawer.Screen name=\"Profile\" component={EmptyScreen} /> */}\r\n    {/* <Stack.Screen name=\"Settings\" component={EmptyScreen} /> */}\r\n    </Drawer.Navigator>\r\n);\r\n}\r\n\r\n\r\nconst AppNavigator = () => {\r\n    return (\r\n        // <NavigationContainer>\r\n            <Stack.Navigator>\r\n\r\n            <Stack.Screen name=\"home\" component={HomeScreen} options={{ header: () => <HeaderScreen title=\"Home\" /> }} />\r\n\r\n\r\n                <Stack.Screen name=\"Footer\" component={FooterScreen} />\r\n                <Stack.Screen name=\"Sidebar\" component={SidebarScreen} />\r\n                {/* <Stack.Screen name=\"Home\" component={HomeScreen} options={{ header: () => <HeaderScreen title=\"Home\" /> }} /> */}\r\n                <Stack.Screen name=\"Signup\" component={SignupScreen} options={getStackScreenOptions()} />\r\n                <Stack.Screen name=\"Login\" component={LoginScreen} options={getStackScreenOptions()}/>\r\n                <Stack.Screen name=\"Header\" component= {()=><HeaderScreen title='Header' />}   options={{ headerShown: false }} />\r\n            </Stack.Navigator>\r\n        // </NavigationContainer>\r\n    );\r\n};\r\n\r\n\r\n\r\nconst getStackScreenOptions = (title) => ({\r\n    title,\r\n    headerStyle: {\r\n        backgroundColor: '#0bbefe',\r\n        borderBottomLeftRadius: 10,\r\n        borderBottomRightRadius: 10,\r\n        },\r\n    headerTitleStyle: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        color: '#fff', // Customize the color\r\n        textTransform: 'uppercase', // Convert text to uppercase\r\n    }\r\n});\r\n  \r\n\r\n\r\nconst App = () => (\r\n    <NavigationContainer>\r\n      <Home />\r\n    </NavigationContainer>\r\n  );\r\nexport default App;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}